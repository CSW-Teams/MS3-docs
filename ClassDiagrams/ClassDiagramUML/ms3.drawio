<mxGraphModel dx="0" dy="0" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" background="none" math="0" shadow="0">
  <root>
    <mxCell id="0" />
    <mxCell id="1" parent="0" />
    <mxCell id="node17" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ApplicationStartup&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ApplicationStartup(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- configVincoliDao: ConfigVincoliDao&lt;br/&gt;- vincoloDao: VincoloDao&lt;br/&gt;- desiderataDao: DesiderataDao&lt;br/&gt;- turnoDao: TurnoDao&lt;br/&gt;- utenteDao: UtenteDao&lt;br/&gt;- scocciaturaDao: ScocciaturaDao&lt;br/&gt;- configVincoloMaxPeriodoConsecutivoDao: ConfigVincoloMaxPeriodoConsecutivoDao&lt;br/&gt;- categoriaDao: CategorieDao&lt;br/&gt;- categoriaUtenteDao: CategoriaUtenteDao&lt;br/&gt;- holidayController: IHolidayController&lt;br/&gt;- servizioDao: ServizioDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- populateDB(): void&lt;br/&gt;+ LoadHoliday(): void&lt;br/&gt;+ onApplicationEvent(ApplicationReadyEvent): void&lt;br/&gt;- registerScocciature(): void&lt;br/&gt;- registerConstraints(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7189" y="1789" width="576" height="436" as="geometry" />
    </mxCell>
    <mxCell id="node104" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AssegnazioneTurno&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AssegnazioneTurno(LocalDate, Turno): &lt;br/&gt;+ AssegnazioneTurno(Set&amp;lt;Utente&amp;gt;, Set&amp;lt;Utente&amp;gt;, long, Turno): &lt;br/&gt;+ AssegnazioneTurno(LocalDate, Turno, Set&amp;lt;Utente&amp;gt;, Set&amp;lt;Utente&amp;gt;): &lt;br/&gt;+ AssegnazioneTurno(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- utentiDiGuardia: Set&amp;lt;Utente&amp;gt;&lt;br/&gt;- retiredUsers: Set&amp;lt;Utente&amp;gt;&lt;br/&gt;- id: Long&lt;br/&gt;- utentiReperibili: Set&amp;lt;Utente&amp;gt;&lt;br/&gt;- dataEpochDay: long&lt;br/&gt;- turno: Turno&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ isReserve(Utente): boolean&lt;br/&gt;+ setUtentiDiGuardia(Set&amp;lt;Utente&amp;gt;): void&lt;br/&gt;+ getRetiredUsers(): Set&amp;lt;Utente&amp;gt;&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setUtentiReperibili(Set&amp;lt;Utente&amp;gt;): void&lt;br/&gt;+ setRetiredUsers(Set&amp;lt;Utente&amp;gt;): void&lt;br/&gt;+ setDataEpochDay(long): void&lt;br/&gt;+ setTurno(Turno): void&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getUtentiReperibili(): Set&amp;lt;Utente&amp;gt;&lt;br/&gt;+ getTurno(): Turno&lt;br/&gt;+ isAllocated(Utente): boolean&lt;br/&gt;+ getData(): LocalDate&lt;br/&gt;+ getUtenti(): Set&amp;lt;Utente&amp;gt;&lt;br/&gt;+ getDataEpochDay(): long&lt;br/&gt;+ addUtenteReperibile(Utente): void&lt;br/&gt;+ getUtentiDiGuardia(): Set&amp;lt;Utente&amp;gt;&lt;br/&gt;+ getUtentiAsList(): List&amp;lt;Utente&amp;gt;&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ clone(): AssegnazioneTurno&lt;br/&gt;- isUserIn(Utente, List&amp;lt;Utente&amp;gt;): boolean&lt;br/&gt;+ isRetired(Utente): boolean&lt;br/&gt;+ addUtentediGuardia(Utente): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4927" y="2145" width="467" height="873" as="geometry" />
    </mxCell>
    <mxCell id="node73" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AssegnazioneTurnoDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AssegnazioneTurnoDTO(Long, Long, Timestamp, Timestamp, Set&amp;lt;UtenteDTO&amp;gt;, Set&amp;lt;UtenteDTO&amp;gt;, ServizioDTO, TipologiaTurno, boolean, MansioneEnum, boolean, Set&amp;lt;UtenteDTO&amp;gt;): &lt;br/&gt;+ AssegnazioneTurnoDTO(Timestamp, Timestamp, Set&amp;lt;UtenteDTO&amp;gt;, Set&amp;lt;UtenteDTO&amp;gt;, ServizioDTO, TipologiaTurno): &lt;br/&gt;+ AssegnazioneTurnoDTO(Long, Timestamp, Timestamp, Set&amp;lt;UtenteDTO&amp;gt;, Set&amp;lt;UtenteDTO&amp;gt;, ServizioDTO, TipologiaTurno): &lt;br/&gt;+ AssegnazioneTurnoDTO(): &lt;br/&gt;+ AssegnazioneTurnoDTO(Long, Long, Timestamp, Timestamp, Set&amp;lt;UtenteDTO&amp;gt;, Set&amp;lt;UtenteDTO&amp;gt;, ServizioDTO, TipologiaTurno, boolean, boolean): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- idTurno: Long&lt;br/&gt;- mansione: MansioneEnum&lt;br/&gt;- servizio: ServizioDTO&lt;br/&gt;- id: Long&lt;br/&gt;- reperibilitaAttiva: boolean&lt;br/&gt;- giornoSuccessivoTurno: boolean&lt;br/&gt;- utentiDiGuardia: Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;- inizio: Timestamp&lt;br/&gt;- retiredUsers: Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;- fine: Timestamp&lt;br/&gt;- utentiReperibili: Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;- tipologiaTurno: TipologiaTurno&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ isGiornoSuccessivoTurno(): boolean&lt;br/&gt;+ getMansione(): MansioneEnum&lt;br/&gt;+ isReperibilitaAttiva(): boolean&lt;br/&gt;+ setGiornoSuccessivoTurno(boolean): void&lt;br/&gt;+ getRetiredUsers(): Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;+ setRetiredUsers(Set&amp;lt;UtenteDTO&amp;gt;): void&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setIdTurno(Long): void&lt;br/&gt;+ setUtentiReperibili(Set&amp;lt;UtenteDTO&amp;gt;): void&lt;br/&gt;+ setReperibilitaAttiva(boolean): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setInizio(Timestamp): void&lt;br/&gt;+ setServizio(ServizioDTO): void&lt;br/&gt;+ setMansione(MansioneEnum): void&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ setUtentiDiGuardia(Set&amp;lt;UtenteDTO&amp;gt;): void&lt;br/&gt;+ setFine(Timestamp): void&lt;br/&gt;+ setTipologiaTurno(TipologiaTurno): void&lt;br/&gt;+ getUtentiReperibili(): Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;+ getTipologiaTurno(): TipologiaTurno&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ getFine(): Timestamp&lt;br/&gt;+ getIdTurno(): Long&lt;br/&gt;+ getInizio(): Timestamp&lt;br/&gt;+ getUtentiDiGuardia(): Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;+ getServizio(): ServizioDTO&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3849" y="1354" width="455" height="1080" as="geometry" />
    </mxCell>
    <mxCell id="node41" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;AssegnazioneTurnoDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findTurniUtente(Long): Set&amp;lt;AssegnazioneTurno&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8328" y="2165" width="357" height="78" as="geometry" />
    </mxCell>
    <mxCell id="node121" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AssegnazioneTurnoException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AssegnazioneTurnoException(String): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5996" y="1387" width="286" height="67" as="geometry" />
    </mxCell>
    <mxCell id="node68" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;AssegnazioneTurnoRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AssegnazioneTurnoRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- controllerAssegnazioneTurni: IControllerAssegnazioneTurni&lt;br/&gt;- controllerScheduler: IControllerScheduler&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ creaTurnoAssegnato(RegistraAssegnazioneTurnoDTO): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ rimuoviAssegnazione(Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiTurniAssegnati(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiTurniUtente(Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ modificaAssegnazioneTurno(ModificaAssegnazioneTurnoDTO): ResponseEntity&amp;lt;?&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4707" y="1018" width="567" height="229" as="geometry" />
    </mxCell>
    <mxCell id="node14" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;AttoreEnum&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AttoreEnum(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PIANIFICATORE: &lt;br/&gt;+ UTENTE: &lt;br/&gt;+ CONFIGURATORE: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): AttoreEnum[]&lt;br/&gt;+ valueOf(String): AttoreEnum&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6365" y="2046" width="222" height="183" as="geometry" />
    </mxCell>
    <mxCell id="node80" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CalendarServiceException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CalendarServiceException(Exception): &lt;br/&gt;+ CalendarServiceException(String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- serialVersionUID: long&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7368" y="1509" width="287" height="120" as="geometry" />
    </mxCell>
    <mxCell id="node113" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CalendarServiceManager&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CalendarServiceManager(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- serviceURL: String&lt;br/&gt;~ holidayController: IHolidayController&lt;br/&gt;- dateFormat: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getHolidays(): List&amp;lt;Holiday&amp;gt;&lt;br/&gt;+ getAllSundays(int): List&amp;lt;Date&amp;gt;&lt;br/&gt;+ init(CalendarSetting): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2199" y="1331" width="269" height="206" as="geometry" />
    </mxCell>
    <mxCell id="node131" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CalendarSetting&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CalendarSetting(String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- baseURL: String&lt;br/&gt;- URLParameters: List&amp;lt;KeyValue&amp;lt;String, String&amp;gt;&amp;gt;&lt;br/&gt;- dateFormat: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDateFormat(): String&lt;br/&gt;+ addURLParameter(String): void&lt;br/&gt;+ reset(): void&lt;br/&gt;+ addURLParameter(String, String): void&lt;br/&gt;+ getServiceURL(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7828" y="2273" width="346" height="252" as="geometry" />
    </mxCell>
    <mxCell id="node142" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CambiaPasswordRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CambiaPasswordRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- controllerpwd: IControllerPassword&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ cambiaPass(PasswordDTO): ResponseEntity&amp;lt;?&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2312" y="1709" width="345" height="123" as="geometry" />
    </mxCell>
    <mxCell id="node11" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Categoria&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Categoria(): &lt;br/&gt;+ Categoria(String, TipoCategoriaEnum): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- id: Long&lt;br/&gt;- nome: String&lt;br/&gt;- tipo: TipoCategoriaEnum&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getId(): Long&lt;br/&gt;+ getNome(): String&lt;br/&gt;+ getTipo(): TipoCategoriaEnum&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setNome(String): void&lt;br/&gt;+ setTipo(TipoCategoriaEnum): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7327" y="2941" width="289" height="390" as="geometry" />
    </mxCell>
    <mxCell id="node96" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CategoriaDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CategoriaDTO(String, TipoCategoriaEnum): &lt;br/&gt;+ CategoriaDTO(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- tipo: TipoCategoriaEnum&lt;br/&gt;- nome: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getNome(): String&lt;br/&gt;+ getTipo(): TipoCategoriaEnum&lt;br/&gt;+ setNome(String): void&lt;br/&gt;+ setTipo(TipoCategoriaEnum): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4963" y="3127" width="316" height="321" as="geometry" />
    </mxCell>
    <mxCell id="node46" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CategoriaUtente&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CategoriaUtente(Categoria, LocalDate, LocalDate): &lt;br/&gt;+ CategoriaUtente(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- inizioValidità: LocalDate&lt;br/&gt;- id: Long&lt;br/&gt;- categoria: Categoria&lt;br/&gt;- fineValidità: LocalDate&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getFineValidità(): LocalDate&lt;br/&gt;+ getCategoria(): Categoria&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ getInizioValidità(): LocalDate&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setCategoria(Categoria): void&lt;br/&gt;+ setInizioValidità(LocalDate): void&lt;br/&gt;+ setFineValidità(LocalDate): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ toString(): String&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ isValid(LocalDate): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6744" y="1567" width="364" height="482" as="geometry" />
    </mxCell>
    <mxCell id="node24" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CategoriaUtenteDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CategoriaUtenteDTO(Long, Categoria, String, String): &lt;br/&gt;+ CategoriaUtenteDTO(): &lt;br/&gt;+ CategoriaUtenteDTO(Categoria, String, String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- id: Long&lt;br/&gt;- categoria: Categoria&lt;br/&gt;- fineValidita: String&lt;br/&gt;- inizioValidita: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setId(Long): void&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ getCategoria(): Categoria&lt;br/&gt;+ getInizioValidita(): String&lt;br/&gt;+ getFineValidita(): String&lt;br/&gt;+ setCategoria(Categoria): void&lt;br/&gt;+ setInizioValidita(String): void&lt;br/&gt;+ setFineValidita(String): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3402" y="1864" width="382" height="482" as="geometry" />
    </mxCell>
    <mxCell id="node141" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;CategoriaUtenteDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findTurnazioniUtente(Long): Set&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;+ findStatoUtente(Long): Set&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;+ findSpecializzazioniUtente(Long): Set&amp;lt;CategoriaUtente&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4466" y="2482" width="401" height="135" as="geometry" />
    </mxCell>
    <mxCell id="node8" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CategoriaUtenteRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CategoriaUtenteRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- controllerCategorie: IControllerCategorie&lt;br/&gt;- controllerCategorieUtente: IControllerCategorieUtente&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiCategorieUtente(Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ aggiungiTurnazione(CategoriaUtenteDTO, Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiSpecializzazioniUtente(Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiSpecializzazioni(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiTurnazioni(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ deleteStatoUtente(Long, Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ aggiungiStato(CategoriaUtenteDTO, Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiTurnazioniUtente(Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiStati(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ deleteCategoriaUtente(Long, Long): ResponseEntity&amp;lt;?&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3777" y="938" width="478" height="344" as="geometry" />
    </mxCell>
    <mxCell id="node114" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;CategorieDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findAllByTipo(TipoCategoriaEnum): Set&amp;lt;Categoria&amp;gt;&lt;br/&gt;+ findAllByNome(String): Categoria&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5859" y="2630" width="364" height="106" as="geometry" />
    </mxCell>
    <mxCell id="node36" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Config&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Config(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- name: String&lt;br/&gt;- firstBoot: boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getName(): String&lt;br/&gt;+ isFirstBoot(): boolean&lt;br/&gt;+ setName(String): void&lt;br/&gt;+ setFirstBoot(boolean): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4010" y="3001" width="215" height="298" as="geometry" />
    </mxCell>
    <mxCell id="node39" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ConfigDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2728" y="3011" width="133" height="35" as="geometry" />
    </mxCell>
    <mxCell id="node34" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ConfigVincoli&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ConfigVincoli(): &lt;br/&gt;+ ConfigVincoli(int, int, int, int, List&amp;lt;ConfigVincoloMaxPeriodoConsecutivo&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- numGiorniPeriodo: int&lt;br/&gt;- configVincoloMaxPeriodoConsecutivoPerCategoria: List&amp;lt;ConfigVincoloMaxPeriodoConsecutivo&amp;gt;&lt;br/&gt;- horizonTurnoNotturno: int&lt;br/&gt;- maxMinutiPeriodo: int&lt;br/&gt;- numMaxMinutiConsecutiviPerTutti: int&lt;br/&gt;- id: Long&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setId(Long): void&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ getNumGiorniPeriodo(): int&lt;br/&gt;+ getMaxMinutiPeriodo(): int&lt;br/&gt;+ getHorizonTurnoNotturno(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ getNumMaxMinutiConsecutiviPerTutti(): int&lt;br/&gt;+ getConfigVincoloMaxPeriodoConsecutivoPerCategoria(): List&amp;lt;ConfigVincoloMaxPeriodoConsecutivo&amp;gt;&lt;br/&gt;+ setNumGiorniPeriodo(int): void&lt;br/&gt;+ setMaxMinutiPeriodo(int): void&lt;br/&gt;+ setNumMaxMinutiConsecutiviPerTutti(int): void&lt;br/&gt;+ setHorizonTurnoNotturno(int): void&lt;br/&gt;+ setConfigVincoloMaxPeriodoConsecutivoPerCategoria(List&amp;lt;ConfigVincoloMaxPeriodoConsecutivo&amp;gt;): void&lt;br/&gt;+ equals(Object): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7676" y="2586" width="682" height="597" as="geometry" />
    </mxCell>
    <mxCell id="node38" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ConfigVincoliDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8254" y="2458" width="185" height="35" as="geometry" />
    </mxCell>
    <mxCell id="node105" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ConfigVincoloMaxPeriodoConsecutivo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ConfigVincoloMaxPeriodoConsecutivo(Categoria, int): &lt;br/&gt;+ ConfigVincoloMaxPeriodoConsecutivo(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- id: Long&lt;br/&gt;- categoriaVincolata: Categoria&lt;br/&gt;- numMaxMinutiConsecutivi: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getId(): Long&lt;br/&gt;+ getCategoriaVincolata(): Categoria&lt;br/&gt;+ getNumMaxMinutiConsecutivi(): int&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setCategoriaVincolata(Categoria): void&lt;br/&gt;+ setNumMaxMinutiConsecutivi(int): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="823" y="1593" width="385" height="390" as="geometry" />
    </mxCell>
    <mxCell id="node6" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ConfigVincoloMaxPeriodoConsecutivoDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findAllByCategoriaVincolataNome(String): List&amp;lt;ConfigVincoloMaxPeriodoConsecutivo&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6901" y="982" width="586" height="78" as="geometry" />
    </mxCell>
    <mxCell id="node100" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ContestoScocciatura&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ContestoScocciatura(UserScheduleState, AssegnazioneTurno): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- userScheduleState: UserScheduleState&lt;br/&gt;- assegnazioneTurno: AssegnazioneTurno&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getUserScheduleState(): UserScheduleState&lt;br/&gt;+ getAssegnazioneTurno(): AssegnazioneTurno&lt;br/&gt;+ setUserScheduleState(UserScheduleState): void&lt;br/&gt;+ setAssegnazioneTurno(AssegnazioneTurno): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2396" y="2063" width="446" height="298" as="geometry" />
    </mxCell>
    <mxCell id="node90" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ContestoVincolo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ContestoVincolo(UserScheduleState, AssegnazioneTurno): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- assegnazioneTurno: AssegnazioneTurno&lt;br/&gt;- userScheduleState: UserScheduleState&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getUserScheduleState(): UserScheduleState&lt;br/&gt;+ getAssegnazioneTurno(): AssegnazioneTurno&lt;br/&gt;+ setUserScheduleState(UserScheduleState): void&lt;br/&gt;+ setAssegnazioneTurno(AssegnazioneTurno): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4441" y="3004" width="420" height="298" as="geometry" />
    </mxCell>
    <mxCell id="node120" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerAssegnazioniTurni&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerAssegnazioniTurni(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- turnoDao: TurnoDao&lt;br/&gt;- assegnazioneTurnoDao: AssegnazioneTurnoDao&lt;br/&gt;- scheduleDao: ScheduleDao&lt;br/&gt;- utenteDao: UtenteDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiTurnoByID(long): AssegnazioneTurno&lt;br/&gt;+ leggiTurniAssegnati(): Set&amp;lt;AssegnazioneTurnoDTO&amp;gt;&lt;br/&gt;+ creaTurnoAssegnato(RegistraAssegnazioneTurnoDTO): AssegnazioneTurno&lt;br/&gt;+ leggiTurniUtente(Long): Set&amp;lt;AssegnazioneTurnoDTO&amp;gt;&lt;br/&gt;- utenteInReperibilita(AssegnazioneTurno, Long): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7138" y="639" width="521" height="275" as="geometry" />
    </mxCell>
    <mxCell id="node2" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerCategorie&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerCategorie(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ categorieDao: CategorieDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiCategorieStato(): Set&amp;lt;CategoriaDTO&amp;gt;&lt;br/&gt;+ leggiCategorieSpecializzazioni(): Set&amp;lt;CategoriaDTO&amp;gt;&lt;br/&gt;+ leggiCategorieTurnazioni(): Set&amp;lt;CategoriaDTO&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8107" y="1223" width="376" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node4" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerCategorieUtente&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerCategorieUtente(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ categoriaUtenteDao: CategoriaUtenteDao&lt;br/&gt;- categorieDao: CategorieDao&lt;br/&gt;- utenteDao: UtenteDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiTurnazioniUtente(Long): Set&amp;lt;CategoriaUtenteDTO&amp;gt;&lt;br/&gt;+ cancellaRotazione(Long, Long): void&lt;br/&gt;+ aggiungiTurnazioneUtente(CategoriaUtenteDTO, Long): CategoriaUtente&lt;br/&gt;+ leggiCategorieUtente(Long): Set&amp;lt;CategoriaUtenteDTO&amp;gt;&lt;br/&gt;+ aggiungiStatoUtente(CategoriaUtenteDTO, Long): CategoriaUtente&lt;br/&gt;+ cancellaStato(Long, Long): void&lt;br/&gt;+ leggiSpecializzazioniUtente(Long): Set&amp;lt;CategoriaUtenteDTO&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1323" y="1413" width="503" height="298" as="geometry" />
    </mxCell>
    <mxCell id="node74" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerDesiderata&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerDesiderata(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ desiderataDao: DesiderataDao&lt;br/&gt;~ utenteDao: UtenteDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ aggiungiDesiderata(DesiderataDTO, long): Desiderata&lt;br/&gt;+ getDesiderateUtente(long): List&amp;lt;Desiderata&amp;gt;&lt;br/&gt;+ aggiungiDesiderate(List&amp;lt;DesiderataDTO&amp;gt;, long): List&amp;lt;Desiderata&amp;gt;&lt;br/&gt;+ getDesiderateDtoUtente(long): List&amp;lt;DesiderataDTO&amp;gt;&lt;br/&gt;+ cancellaDesiderata(Long, long): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3175" y="826" width="459" height="229" as="geometry" />
    </mxCell>
    <mxCell id="node3" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerGiustificaForzatura&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerGiustificaForzatura(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ liberatoriaDao: LiberatoriaDao&lt;br/&gt;~ giustificazioneFozaturaDao: GiustificazioneFozaturaDao&lt;br/&gt;~ utenteDao: UtenteDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ saveDelibera(MultipartFile): Liberatoria&lt;br/&gt;+ saveGiustificazione(GiustificazioneForzaturaVincoliDTO): void&lt;br/&gt;+ getDelibera(String): Liberatoria&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8134" y="939" width="429" height="206" as="geometry" />
    </mxCell>
    <mxCell id="node101" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerLogin&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerLogin(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- utenteDao: UtenteDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ autenticaUtente(LoginDTO): UtenteDTO&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3836" y="763" width="296" height="123" as="geometry" />
    </mxCell>
    <mxCell id="node72" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerPassword&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerPassword(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- utenteDao: UtenteDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ cambiaPassword(PasswordDTO): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6030" y="811" width="280" height="123" as="geometry" />
    </mxCell>
    <mxCell id="node51" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerScheduler&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerScheduler(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- scocciaturaDao: ScocciaturaDao&lt;br/&gt;- vincoloDao: VincoloDao&lt;br/&gt;- utenteDao: UtenteDao&lt;br/&gt;- scheduleBuilder: ScheduleBuilder&lt;br/&gt;- turnoDao: TurnoDao&lt;br/&gt;- assegnazioneTurnoDao: AssegnazioneTurnoDao&lt;br/&gt;- scheduleDao: ScheduleDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ rigeneraSchedule(long): boolean&lt;br/&gt;+ rimuoviAssegnazioneTurnoSchedulo(AssegnazioneTurno): void&lt;br/&gt;+ check(LocalDate, LocalDate): boolean&lt;br/&gt;+ aggiungiAssegnazioneTurno(AssegnazioneTurno, boolean): Schedule&lt;br/&gt;- checkAssegnazioneTurno(AssegnazioneTurno): boolean&lt;br/&gt;+ leggiSchedulazioniIllegali(): List&amp;lt;ScheduloDTO&amp;gt;&lt;br/&gt;+ rimuoviAssegnazioneTurno(Long): boolean&lt;br/&gt;+ aggiungiAssegnazioneTurno(RegistraAssegnazioneTurnoDTO, boolean): Schedule&lt;br/&gt;+ modificaAssegnazioneTurno(ModificaAssegnazioneTurnoDTO): Schedule&lt;br/&gt;+ rimuoviSchedulo(long): boolean&lt;br/&gt;+ leggiSchedulazioni(): List&amp;lt;ScheduloDTO&amp;gt;&lt;br/&gt;+ createSchedule(LocalDate, LocalDate): Schedule&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4169" y="165" width="524" height="505" as="geometry" />
    </mxCell>
    <mxCell id="node0" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerScocciatura&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerScocciatura(List&amp;lt;Scocciatura&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ scocciature: List&amp;lt;Scocciatura&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getScocciature(): List&amp;lt;Scocciatura&amp;gt;&lt;br/&gt;+ setScocciature(List&amp;lt;Scocciatura&amp;gt;): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ ordinaByUffa(List&amp;lt;UserScheduleState&amp;gt;): void&lt;br/&gt;+ addUffaTempUtenti(List&amp;lt;UserScheduleState&amp;gt;, AssegnazioneTurno): void&lt;br/&gt;+ calcolaUffaComplessivoUtenteAssegnazione(ContestoScocciatura): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4365" y="2098" width="498" height="298" as="geometry" />
    </mxCell>
    <mxCell id="node125" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerServizi&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerServizi(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ servizioDao: ServizioDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ creaServizio(ServizioDTO): Servizio&lt;br/&gt;+ leggiServizioByNome(String): ServizioDTO&lt;br/&gt;+ leggiServizi(): Set&amp;lt;ServizioDTO&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2947" y="1167" width="306" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node97" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerTurni&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerTurni(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ turnoDao: TurnoDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiTurniDiServizio(String): Set&amp;lt;TurnoDTO&amp;gt;&lt;br/&gt;+ leggiTurni(): Set&amp;lt;TurnoDTO&amp;gt;&lt;br/&gt;- checkTurno(Turno): boolean&lt;br/&gt;+ creaTurno(TurnoDTO): Turno&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5109" y="711" width="325" height="183" as="geometry" />
    </mxCell>
    <mxCell id="node133" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerUtente&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerUtente(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- utenteDao: UtenteDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiUtenti(): Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;+ creaUtente(UtenteDTO): Object&lt;br/&gt;+ leggiUtente(long): UtenteDTO&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1901" y="1614" width="245" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node65" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ControllerVincolo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ControllerVincolo(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ vincoloDao: VincoloDao&lt;br/&gt;~ configVincoliDao: ConfigVincoliDao&lt;br/&gt;~ configVincoloMaxPeriodoConsecutivoDao: ConfigVincoloMaxPeriodoConsecutivoDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ aggiornaVincoli(ConfigVincoli): ConfigVincoli&lt;br/&gt;+ leggiVincoli(): List&amp;lt;Vincolo&amp;gt;&lt;br/&gt;+ leggiConfigurazioneVincoli(): ConfigVincoli&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-224" y="1782" width="576" height="206" as="geometry" />
    </mxCell>
    <mxCell id="node109" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ConvertitoreData&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ConvertitoreData(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ daStandardVersoTestuale(String): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2887" y="2422" width="298" height="95" as="geometry" />
    </mxCell>
    <mxCell id="node26" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;Country&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- Country(String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GERMANY: &lt;br/&gt;+ GUADELOUPE: &lt;br/&gt;+ CHILE: &lt;br/&gt;+ AMERICAN_SAMOA: &lt;br/&gt;+ PARAGUAY: &lt;br/&gt;+ SWEDEN: &lt;br/&gt;+ POLAND: &lt;br/&gt;+ CONGO: &lt;br/&gt;+ ECUADOR: &lt;br/&gt;+ HONDURAS: &lt;br/&gt;+ CANADA: &lt;br/&gt;- countryCode: String&lt;br/&gt;+ TURKEY: &lt;br/&gt;+ GUATEMALA: &lt;br/&gt;+ LESOTHO: &lt;br/&gt;+ PORTUGAL: &lt;br/&gt;+ EL_SALVADOR: &lt;br/&gt;+ LITHUANIA: &lt;br/&gt;+ MADAGASCAR: &lt;br/&gt;+ BRAZIL: &lt;br/&gt;+ NETHERLANDS: &lt;br/&gt;+ SIERRA_LEONE: &lt;br/&gt;+ GUERNSEY: &lt;br/&gt;+ ARMENIA: &lt;br/&gt;+ SAN_MARINO: &lt;br/&gt;+ VIETNAM: &lt;br/&gt;+ BOLIVIA: &lt;br/&gt;+ MEXICO: &lt;br/&gt;+ BOTSWANA: &lt;br/&gt;+ FRANCE: &lt;br/&gt;+ INDONESIA: &lt;br/&gt;+ SLOVENIA: &lt;br/&gt;+ REUNION: &lt;br/&gt;+ CROATIA: &lt;br/&gt;+ AUSTRIA: &lt;br/&gt;+ MALTA: &lt;br/&gt;+ DENMARK: &lt;br/&gt;+ RWANDA: &lt;br/&gt;+ FRENCH_GUIANA: &lt;br/&gt;+ MARTINIQUE: &lt;br/&gt;+ BAHAMAS: &lt;br/&gt;+ ANDORRA: &lt;br/&gt;+ SLOVAKIA: &lt;br/&gt;+ VENEZUELA: &lt;br/&gt;+ UNITED_STATES: &lt;br/&gt;+ CENTRAL_AFRICAN_REPUBLIC: &lt;br/&gt;+ IRELAND: &lt;br/&gt;+ SOUTH_SUDAN: &lt;br/&gt;+ DOMINICA: &lt;br/&gt;+ ISLE_OF_MAN: &lt;br/&gt;+ SPAIN: &lt;br/&gt;+ CUBA: &lt;br/&gt;+ TOGO: &lt;br/&gt;+ ARUBA: &lt;br/&gt;+ ANTIGUA_AND_BARBUDA: &lt;br/&gt;+ CARIBBEAN_NETHERLANDS: &lt;br/&gt;+ ESTONIA: &lt;br/&gt;+ HAITI: &lt;br/&gt;+ CZECH_REPUBLIC: &lt;br/&gt;+ SAINT_HELENA: &lt;br/&gt;+ ST_BARTHELEMY: &lt;br/&gt;+ UNITED_KINGDOM: &lt;br/&gt;+ JERSEY: &lt;br/&gt;+ TANZANIA: &lt;br/&gt;+ COSTA_RICA: &lt;br/&gt;+ LUXEMBOURG: &lt;br/&gt;+ CURACAO: &lt;br/&gt;+ ANGUILLA: &lt;br/&gt;+ ANGOLA: &lt;br/&gt;+ LICHTENSTEIN: &lt;br/&gt;+ ZIMBABWE: &lt;br/&gt;+ SOMALIA: &lt;br/&gt;+ UGANDA: &lt;br/&gt;+ RUSSIA: &lt;br/&gt;+ GRENADA: &lt;br/&gt;+ MAYOTTE: &lt;br/&gt;+ ITALY: &lt;br/&gt;+ NICARAGUA: &lt;br/&gt;+ LATVIA: &lt;br/&gt;+ NORWAY: &lt;br/&gt;+ CAPE_VERDE: &lt;br/&gt;+ BOSNIA_AND_HERZEGOVINA: &lt;br/&gt;+ GREENLAND: &lt;br/&gt;+ HUNGARY: &lt;br/&gt;+ ALBANIA: &lt;br/&gt;+ BARBADOS: &lt;br/&gt;+ ICELAND: &lt;br/&gt;+ BELGIUM: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ valueOf(String): Country&lt;br/&gt;+ nameToCode(String): String?&lt;br/&gt;+ values(): Country[]&lt;br/&gt;+ code(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2476" y="3511" width="240" height="2184" as="geometry" />
    </mxCell>
    <mxCell id="node94" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;CountryRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CountryRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getCountryCode(String): ResponseEntity&amp;lt;String&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5948" y="1842" width="356" height="95" as="geometry" />
    </mxCell>
    <mxCell id="node122" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DatabaseException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DatabaseException(String): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1944" y="2321" width="219" height="67" as="geometry" />
    </mxCell>
    <mxCell id="node69" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Desiderata&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Desiderata(LocalDate, List&amp;lt;TipologiaTurno&amp;gt;, Utente): &lt;br/&gt;+ Desiderata(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- utente: Utente&lt;br/&gt;- data: LocalDate&lt;br/&gt;- id: Long&lt;br/&gt;- tipologieTurnoCoinvolte: List&amp;lt;TipologiaTurno&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setId(Long): void&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ getData(): LocalDate&lt;br/&gt;+ getTipologieTurnoCoinvolte(): List&amp;lt;TipologiaTurno&amp;gt;&lt;br/&gt;+ getUtente(): Utente&lt;br/&gt;+ setData(LocalDate): void&lt;br/&gt;+ setTipologieTurnoCoinvolte(List&amp;lt;TipologiaTurno&amp;gt;): void&lt;br/&gt;+ setUtente(Utente): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3413" y="2930" width="394" height="459" as="geometry" />
    </mxCell>
    <mxCell id="node127" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DesiderataDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DesiderataDTO(Long, int, int, int, List&amp;lt;TipologiaTurno&amp;gt;): &lt;br/&gt;+ DesiderataDTO(int, int, int, List&amp;lt;TipologiaTurno&amp;gt;): &lt;br/&gt;+ DesiderataDTO(int, int, int): &lt;br/&gt;+ DesiderataDTO(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- idDesiderata: Long&lt;br/&gt;- anno: int&lt;br/&gt;- giorno: int&lt;br/&gt;- tipologieTurni: List&amp;lt;TipologiaTurno&amp;gt;&lt;br/&gt;- mese: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getAnno(): int&lt;br/&gt;+ getIdDesiderata(): Long&lt;br/&gt;+ getGiorno(): int&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ getMese(): int&lt;br/&gt;+ getTipologieTurni(): List&amp;lt;TipologiaTurno&amp;gt;&lt;br/&gt;+ setIdDesiderata(Long): void&lt;br/&gt;+ setGiorno(int): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setMese(int): void&lt;br/&gt;+ setAnno(int): void&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ setTipologieTurni(List&amp;lt;TipologiaTurno&amp;gt;): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6729" y="2198" width="400" height="574" as="geometry" />
    </mxCell>
    <mxCell id="node31" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;DesiderataDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findAllByUtenteId(Long): List&amp;lt;Desiderata&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1618" y="2624" width="309" height="78" as="geometry" />
    </mxCell>
    <mxCell id="node87" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;DesiderataRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ DesiderataRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ controllerDesiderata: IControllerDesiderata&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ aggiungiDesiderate(List&amp;lt;DesiderataDTO&amp;gt;, Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiDesiderateUtente(Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ deleteCategoriaUtente(Long, Long): ResponseEntity&amp;lt;?&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4833" y="1734" width="479" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node37" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GenerazioneScheduloDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GenerazioneScheduloDTO(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- giornoInizio: int&lt;br/&gt;- meseInizio: int&lt;br/&gt;- annoInizio: int&lt;br/&gt;- annoFine: int&lt;br/&gt;- giornoFine: int&lt;br/&gt;- meseFine: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getGiornoInizio(): int&lt;br/&gt;+ getAnnoInizio(): int&lt;br/&gt;+ getMeseInizio(): int&lt;br/&gt;+ getGiornoFine(): int&lt;br/&gt;+ getMeseFine(): int&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ getAnnoFine(): int&lt;br/&gt;+ setGiornoInizio(int): void&lt;br/&gt;+ setMeseInizio(int): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setAnnoFine(int): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ setMeseFine(int): void&lt;br/&gt;+ setAnnoInizio(int): void&lt;br/&gt;+ setGiornoFine(int): void&lt;br/&gt;+ getStartDate(): LocalDate&lt;br/&gt;+ getEndDate(): LocalDate&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4387" y="1278" width="254" height="620" as="geometry" />
    </mxCell>
    <mxCell id="node61" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GiorniDellaSettimanaBitMask&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GiorniDellaSettimanaBitMask(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- giorni: byte&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getGiorni(): byte&lt;br/&gt;+ setGiorni(byte): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ disableAllDays(): GiorniDellaSettimanaBitMask&lt;br/&gt;+ removeDayOfWeek(DayOfWeek): GiorniDellaSettimanaBitMask&lt;br/&gt;+ isDayOfWeekIncluded(DayOfWeek): boolean&lt;br/&gt;+ enableAllDays(): GiorniDellaSettimanaBitMask&lt;br/&gt;+ addDayOfWeek(DayOfWeek): GiorniDellaSettimanaBitMask&lt;br/&gt;- getBitMaskGiorno(DayOfWeek): byte&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8343" y="1666" width="433" height="367" as="geometry" />
    </mxCell>
    <mxCell id="node143" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GiorniDellaSettimanaBitMask&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GiorniDellaSettimanaBitMask(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ giorni: byte&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ isDayOfWeekIncluded(DayOfWeek): boolean&lt;br/&gt;+ removeDayOfWeek(DayOfWeek): void&lt;br/&gt;+ getBitMaskGiorno(DayOfWeek): byte&lt;br/&gt;+ addDayOfWeek(DayOfWeek): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1368" y="1915" width="321" height="183" as="geometry" />
    </mxCell>
    <mxCell id="node52" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GiustificazioneForzaturaEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GiustificazioneForzaturaEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- iControllerGiustificaForzatura: IControllerGiustificaForzatura&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ caricaGiustificazione(GiustificazioneForzaturaVincoliDTO): ResponseEntity&amp;lt;String&amp;gt;&lt;br/&gt;+ uploadFile(MultipartFile): ResponseEntity&amp;lt;String&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2535" y="1508" width="563" height="148" as="geometry" />
    </mxCell>
    <mxCell id="node88" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GiustificazioneForzaturaVincoli&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GiustificazioneForzaturaVincoli(String, TipologiaTurno, Servizio, LocalDate, Set&amp;lt;Utente&amp;gt;, Utente): &lt;br/&gt;+ GiustificazioneForzaturaVincoli(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- motivazione: String&lt;br/&gt;- servizio: Servizio&lt;br/&gt;- turnoViolante: TipologiaTurno&lt;br/&gt;- utenteGiustificatore: Utente&lt;br/&gt;- data: LocalDate&lt;br/&gt;- id: Long&lt;br/&gt;- utentiAllocati: Set&amp;lt;Utente&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getId(): Long&lt;br/&gt;+ getTurnoViolante(): TipologiaTurno&lt;br/&gt;+ getData(): LocalDate&lt;br/&gt;+ setServizio(Servizio): void&lt;br/&gt;+ getUtentiAllocati(): Set&amp;lt;Utente&amp;gt;&lt;br/&gt;+ getServizio(): Servizio&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ getMotivazione(): String&lt;br/&gt;+ getUtenteGiustificatore(): Utente&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ setMotivazione(String): void&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setUtenteGiustificatore(Utente): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setTurnoViolante(TipologiaTurno): void&lt;br/&gt;+ setUtentiAllocati(Set&amp;lt;Utente&amp;gt;): void&lt;br/&gt;+ setData(LocalDate): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="96" y="2109" width="410" height="666" as="geometry" />
    </mxCell>
    <mxCell id="node110" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;GiustificazioneForzaturaVincoliDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ GiustificazioneForzaturaVincoliDTO(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- giorno: int&lt;br/&gt;- servizio: ServizioDTO&lt;br/&gt;- message: String&lt;br/&gt;- mese: int&lt;br/&gt;- utenteGiustificatoreId: String&lt;br/&gt;- tipologiaTurno: TipologiaTurno&lt;br/&gt;- anno: int&lt;br/&gt;- utentiAllocati: Set&amp;lt;UtenteDTO&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getMessage(): String&lt;br/&gt;+ getUtenteGiustificatoreId(): String&lt;br/&gt;+ setTipologiaTurno(TipologiaTurno): void&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ getGiorno(): int&lt;br/&gt;+ getMese(): int&lt;br/&gt;+ getAnno(): int&lt;br/&gt;+ getTipologiaTurno(): TipologiaTurno&lt;br/&gt;+ setUtentiAllocati(Set&amp;lt;UtenteDTO&amp;gt;): void&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getUtentiAllocati(): Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;+ setAnno(int): void&lt;br/&gt;+ getServizio(): ServizioDTO&lt;br/&gt;+ setMessage(String): void&lt;br/&gt;+ setGiorno(int): void&lt;br/&gt;+ setMese(int): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ setUtenteGiustificatoreId(String): void&lt;br/&gt;+ setServizio(ServizioDTO): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7719" y="685" width="326" height="712" as="geometry" />
    </mxCell>
    <mxCell id="node115" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;GiustificazioneFozaturaDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ saveAll(Iterable&amp;lt;S&amp;gt;): List&amp;lt;S&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3524" y="1574" width="265" height="78" as="geometry" />
    </mxCell>
    <mxCell id="node135" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Holiday&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Holiday(): &lt;br/&gt;+ Holiday(String, HolidayCategory, long, long, String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- name: String&lt;br/&gt;- location: String&lt;br/&gt;- id: Long&lt;br/&gt;- category: HolidayCategory&lt;br/&gt;- endDateEpochDay: long&lt;br/&gt;- startDateEpochDay: long&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setId(Long): void&lt;br/&gt;+ getLocation(): String&lt;br/&gt;+ setName(String): void&lt;br/&gt;+ setCategory(HolidayCategory): void&lt;br/&gt;+ setStartDateEpochDay(long): void&lt;br/&gt;+ setEndDateEpochDay(long): void&lt;br/&gt;+ setLocation(String): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ toString(): String&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ getStartDate(): LocalDate&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ getStartDateEpochDay(): long&lt;br/&gt;+ setEndDate(LocalDate): void&lt;br/&gt;+ getEndDateEpochDay(): long&lt;br/&gt;+ getName(): String&lt;br/&gt;+ getCategory(): HolidayCategory&lt;br/&gt;+ getEndDate(): LocalDate&lt;br/&gt;+ setStartDate(LocalDate): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2911" y="3132" width="371" height="689" as="geometry" />
    </mxCell>
    <mxCell id="node40" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;HolidayCategory&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ HolidayCategory(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ CIVILE: &lt;br/&gt;+ NAZIONALE: &lt;br/&gt;+ RELIGIOSA: &lt;br/&gt;+ LAICA: &lt;br/&gt;+ CORPORATE: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ valueOf(String): HolidayCategory&lt;br/&gt;+ values(): HolidayCategory[]&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6394" y="1614" width="250" height="229" as="geometry" />
    </mxCell>
    <mxCell id="node42" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;HolidayController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ HolidayController(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- holidayDao: HolidayDao&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ registerHoliday(List&amp;lt;Holiday&amp;gt;): void&lt;br/&gt;+ readHolidays(): List&amp;lt;Holiday&amp;gt;&lt;br/&gt;+ registerHolidayPeriod(HolidayDTO): void&lt;br/&gt;+ registerHolidayPeriod(HolidayDTO, int): void&lt;br/&gt;+ registerSundays(LocalDate, int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8543" y="1264" width="320" height="206" as="geometry" />
    </mxCell>
    <mxCell id="node124" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;HolidayDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ HolidayDTO(): &lt;br/&gt;+ HolidayDTO(String, HolidayCategory, long, long, String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- endMonth: int&lt;br/&gt;- startDayOfMonth: int&lt;br/&gt;- name: String&lt;br/&gt;- Location: String&lt;br/&gt;- category: HolidayCategory&lt;br/&gt;- endYear: int&lt;br/&gt;- endDayOfMonth: int&lt;br/&gt;- startMonth: int&lt;br/&gt;- startYear: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getLocation(): String&lt;br/&gt;+ getStartDateEpochDay(): long&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ setName(String): void&lt;br/&gt;+ setCategory(HolidayCategory): void&lt;br/&gt;+ setStartYear(int): void&lt;br/&gt;+ setStartMonth(int): void&lt;br/&gt;+ setStartDayOfMonth(int): void&lt;br/&gt;+ setLocation(String): void&lt;br/&gt;+ setEndYear(int): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setEndMonth(int): void&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ setEndDayOfMonth(int): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ getEndMonth(): int&lt;br/&gt;+ getEndYear(): int&lt;br/&gt;+ setStartDateEpochDay(long): void&lt;br/&gt;+ getStartMonth(): int&lt;br/&gt;+ getStartYear(): int&lt;br/&gt;+ getEndDayOfMonth(): int&lt;br/&gt;+ getStartDayOfMonth(): int&lt;br/&gt;+ getEndDateEpochDay(): long&lt;br/&gt;+ getName(): String&lt;br/&gt;+ getCategory(): HolidayCategory&lt;br/&gt;+ setEndDateEpochDay(long): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5364" y="3079" width="398" height="896" as="geometry" />
    </mxCell>
    <mxCell id="node33" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;HolidayDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findByStartDateEpochDayGreaterThanEqualAndEndDateEpochDayLessThanEqual(long, long): List&amp;lt;Holiday&amp;gt;&lt;br/&gt;+ findByName(String): List&amp;lt;Holiday&amp;gt;&lt;br/&gt;+ findAll(): List&amp;lt;Holiday&amp;gt;&lt;br/&gt;+ findByCategory(HolidayCategory): List&amp;lt;Holiday&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6739" y="2869" width="525" height="164" as="geometry" />
    </mxCell>
    <mxCell id="node53" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;HolidayRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ HolidayRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- setting: CalendarSetting&lt;br/&gt;- calendarServiceManager: ICalendarServiceManager&lt;br/&gt;- holidayController: IHolidayController&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getHolidays(String, String): ResponseEntity&amp;lt;List&amp;lt;HolidayDTO&amp;gt;&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="9411" y="2133" width="447" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node64" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ICalendarServiceManager&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ init(CalendarSetting): void&lt;br/&gt;+ getHolidays(): List&amp;lt;Holiday&amp;gt;&lt;br/&gt;+ getAllSundays(int): List&amp;lt;Date&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2221" y="1163" width="248" height="135" as="geometry" />
    </mxCell>
    <mxCell id="node18" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerAssegnazioneTurni&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiTurniAssegnati(): Set&amp;lt;AssegnazioneTurnoDTO&amp;gt;&lt;br/&gt;+ leggiTurniUtente(Long): Set&amp;lt;AssegnazioneTurnoDTO&amp;gt;&lt;br/&gt;+ leggiTurnoByID(long): AssegnazioneTurno&lt;br/&gt;+ creaTurnoAssegnato(RegistraAssegnazioneTurnoDTO): AssegnazioneTurno&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6672" y="434" width="521" height="164" as="geometry" />
    </mxCell>
    <mxCell id="node98" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerCategorie&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiCategorieStato(): Set&amp;lt;CategoriaDTO&amp;gt;&lt;br/&gt;+ leggiCategorieTurnazioni(): Set&amp;lt;CategoriaDTO&amp;gt;&lt;br/&gt;+ leggiCategorieSpecializzazioni(): Set&amp;lt;CategoriaDTO&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7647" y="465" width="376" height="135" as="geometry" />
    </mxCell>
    <mxCell id="node117" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerCategorieUtente&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ cancellaRotazione(Long, Long): void&lt;br/&gt;+ leggiSpecializzazioniUtente(Long): Set&amp;lt;CategoriaUtenteDTO&amp;gt;&lt;br/&gt;+ aggiungiTurnazioneUtente(CategoriaUtenteDTO, Long): CategoriaUtente&lt;br/&gt;+ leggiTurnazioniUtente(Long): Set&amp;lt;CategoriaUtenteDTO&amp;gt;&lt;br/&gt;+ aggiungiStatoUtente(CategoriaUtenteDTO, Long): CategoriaUtente&lt;br/&gt;+ leggiCategorieUtente(Long): Set&amp;lt;CategoriaUtenteDTO&amp;gt;&lt;br/&gt;+ cancellaStato(Long, Long): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="368" y="1248" width="503" height="200" as="geometry" />
    </mxCell>
    <mxCell id="node44" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerDesiderata&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ cancellaDesiderata(Long, long): void&lt;br/&gt;+ getDesiderateUtente(long): List&amp;lt;Desiderata&amp;gt;&lt;br/&gt;+ aggiungiDesiderate(List&amp;lt;DesiderataDTO&amp;gt;, long): List&amp;lt;Desiderata&amp;gt;&lt;br/&gt;+ aggiungiDesiderata(DesiderataDTO, long): Desiderata&lt;br/&gt;+ getDesiderateDtoUtente(long): List&amp;lt;DesiderataDTO&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3649" y="547" width="459" height="154" as="geometry" />
    </mxCell>
    <mxCell id="node111" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerGiustificaForzatura&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ saveGiustificazione(GiustificazioneForzaturaVincoliDTO): void&lt;br/&gt;+ saveDelibera(MultipartFile): Liberatoria&lt;br/&gt;+ getDelibera(String): Liberatoria&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8109" y="588" width="429" height="135" as="geometry" />
    </mxCell>
    <mxCell id="node43" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerLogin&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ autenticaUtente(LoginDTO): UtenteDTO&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4344" y="900" width="296" height="78" as="geometry" />
    </mxCell>
    <mxCell id="node99" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerPassword&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ cambiaPassword(PasswordDTO): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6545" y="829" width="280" height="78" as="geometry" />
    </mxCell>
    <mxCell id="node56" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerScheduler&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ rimuoviAssegnazioneTurno(Long): boolean&lt;br/&gt;+ leggiSchedulazioniIllegali(): List&amp;lt;ScheduloDTO&amp;gt;&lt;br/&gt;+ createSchedule(LocalDate, LocalDate): Schedule&lt;br/&gt;+ rimuoviAssegnazioneTurnoSchedulo(AssegnazioneTurno): void&lt;br/&gt;+ aggiungiAssegnazioneTurno(RegistraAssegnazioneTurnoDTO, boolean): Schedule&lt;br/&gt;+ leggiSchedulazioni(): List&amp;lt;ScheduloDTO&amp;gt;&lt;br/&gt;+ modificaAssegnazioneTurno(ModificaAssegnazioneTurnoDTO): Schedule&lt;br/&gt;+ rigeneraSchedule(long): boolean&lt;br/&gt;+ aggiungiAssegnazioneTurno(AssegnazioneTurno, boolean): Schedule&lt;br/&gt;+ rimuoviSchedulo(long): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5497" y="445" width="524" height="269" as="geometry" />
    </mxCell>
    <mxCell id="node1" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerServizi&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiServizi(): Set&amp;lt;ServizioDTO&amp;gt;&lt;br/&gt;+ leggiServizioByNome(String): ServizioDTO&lt;br/&gt;+ creaServizio(ServizioDTO): Servizio&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2546" y="1166" width="306" height="135" as="geometry" />
    </mxCell>
    <mxCell id="node50" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerTurni&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiTurniDiServizio(String): Set&amp;lt;TurnoDTO&amp;gt;&lt;br/&gt;+ leggiTurni(): Set&amp;lt;TurnoDTO&amp;gt;&lt;br/&gt;+ creaTurno(TurnoDTO): Turno&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4722" y="730" width="325" height="135" as="geometry" />
    </mxCell>
    <mxCell id="node32" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerUtente&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiUtenti(): Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;+ leggiUtente(long): UtenteDTO&lt;br/&gt;+ creaUtente(UtenteDTO): Object&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1893" y="1396" width="245" height="135" as="geometry" />
    </mxCell>
    <mxCell id="node103" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IControllerVincolo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiVincoli(): List&amp;lt;Vincolo&amp;gt;&lt;br/&gt;+ aggiornaVincoli(ConfigVincoli): ConfigVincoli&lt;br/&gt;+ leggiConfigurazioneVincoli(): ConfigVincoli&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="427" y="1671" width="321" height="135" as="geometry" />
    </mxCell>
    <mxCell id="node129" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;IHolidayController&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ registerHolidayPeriod(HolidayDTO): void&lt;br/&gt;+ readHolidays(): List&amp;lt;Holiday&amp;gt;&lt;br/&gt;+ registerHoliday(List&amp;lt;Holiday&amp;gt;): void&lt;br/&gt;+ registerHolidayPeriod(HolidayDTO, int): void&lt;br/&gt;+ registerSundays(LocalDate, int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8648" y="1045" width="320" height="154" as="geometry" />
    </mxCell>
    <mxCell id="node106" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;IllegalAssegnazioneTurnoException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ IllegalAssegnazioneTurnoException(String): &lt;br/&gt;+ IllegalAssegnazioneTurnoException(Exception): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5608" y="810" width="346" height="92" as="geometry" />
    </mxCell>
    <mxCell id="node89" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Liberatoria&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Liberatoria(): &lt;br/&gt;+ Liberatoria(String, String, byte[]): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- type: String&lt;br/&gt;- data: byte[]&lt;br/&gt;- id: Long&lt;br/&gt;- name: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setType(String): void&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getName(): String&lt;br/&gt;+ getType(): String&lt;br/&gt;+ getData(): byte[]&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setName(String): void&lt;br/&gt;+ setData(byte[]): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4632" y="3496" width="256" height="459" as="geometry" />
    </mxCell>
    <mxCell id="node75" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;LiberatoriaDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findDeliberaByName(String): Liberatoria&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3042" y="2652" width="291" height="78" as="geometry" />
    </mxCell>
    <mxCell id="node49" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;LoginDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ LoginDTO(String, String): &lt;br/&gt;+ LoginDTO(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- username: String&lt;br/&gt;- password: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getUsername(): String&lt;br/&gt;+ getPassword(): String&lt;br/&gt;+ setUsername(String): void&lt;br/&gt;+ setPassword(String): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5822" y="2784" width="209" height="321" as="geometry" />
    </mxCell>
    <mxCell id="node95" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;LoginRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ LoginRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- controllerLogin: IControllerLogin&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ login(LoginDTO): ResponseEntity&amp;lt;?&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4553" y="2723" width="276" height="123" as="geometry" />
    </mxCell>
    <mxCell id="node118" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;MansioneEnum&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MansioneEnum(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ AMBULATORIO: &lt;br/&gt;+ REPARTO: &lt;br/&gt;+ SALA_OPERATORIA: &lt;br/&gt;+ GUARDIA: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): MansioneEnum[]&lt;br/&gt;+ valueOf(String): MansioneEnum&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5983" y="2201" width="243" height="206" as="geometry" />
    </mxCell>
    <mxCell id="node27" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MappaAssegnazioneTurni&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MappaAssegnazioneTurni(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ assegnazioneTurnoToDTO(Set&amp;lt;AssegnazioneTurno&amp;gt;): Set&amp;lt;AssegnazioneTurnoDTO&amp;gt;&lt;br/&gt;+ assegnazioneTurnoToDTO(AssegnazioneTurno): AssegnazioneTurnoDTO&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8748" y="2141" width="583" height="120" as="geometry" />
    </mxCell>
    <mxCell id="node81" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MappaCategoriaUtente&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MappaCategoriaUtente(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ categoriaUtenteToDTO(Set&amp;lt;CategoriaUtente&amp;gt;): Set&amp;lt;CategoriaUtenteDTO&amp;gt;&lt;br/&gt;+ categoriaUtenteDTOToEntity(CategoriaUtenteDTO): CategoriaUtente&lt;br/&gt;+ categoriaUtenteToDTO(CategoriaUtente): CategoriaUtenteDTO&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2794" y="1869" width="520" height="145" as="geometry" />
    </mxCell>
    <mxCell id="node140" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MappaCategoriePerTipo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MappaCategoriePerTipo(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ categoriaSetEntityToDTO(Set&amp;lt;Categoria&amp;gt;): Set&amp;lt;CategoriaDTO&amp;gt;&lt;br/&gt;+ CategoriatoDTO(Categoria): CategoriaDTO&lt;br/&gt;+ CategoriaDTOtoEntity(CategoriaDTO): Categoria&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6855" y="1255" width="445" height="226" as="geometry" />
    </mxCell>
    <mxCell id="node82" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MappaDesiderata&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MappaDesiderata(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ desiderataDtoToEntity(DesiderataDTO, Utente): Desiderata&lt;br/&gt;+ desiderataDtoToEntity(List&amp;lt;DesiderataDTO&amp;gt;, Utente): List&amp;lt;Desiderata&amp;gt;&lt;br/&gt;+ desiderataToDto(List&amp;lt;Desiderata&amp;gt;): List&amp;lt;DesiderataDTO&amp;gt;&lt;br/&gt;+ desiderataToDto(Desiderata): DesiderataDTO&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1362" y="2220" width="495" height="157" as="geometry" />
    </mxCell>
    <mxCell id="node132" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MappaGiustificazioneForzaturaVincoli&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MappaGiustificazioneForzaturaVincoli(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3351" y="1318" width="344" height="157" as="geometry" />
    </mxCell>
    <mxCell id="node25" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MappaHolidays&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- MappaHolidays(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ holidayToDto(Holiday): HolidayDTO&lt;br/&gt;+ dtoToHoliday(HolidayDTO): Holiday&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5465" y="2799" width="264" height="120" as="geometry" />
    </mxCell>
    <mxCell id="node137" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MappaSchedulo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MappaSchedulo(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ scheduloEntitytoDTO(List&amp;lt;Schedule&amp;gt;): List&amp;lt;ScheduloDTO&amp;gt;&lt;br/&gt;+ scheduloToDTO(Schedule): ScheduloDTO&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1389" y="2439" width="418" height="120" as="geometry" />
    </mxCell>
    <mxCell id="node71" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MappaServizio&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MappaServizio(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ servizioEntitytoDTO(List&amp;lt;Servizio&amp;gt;): Set&amp;lt;ServizioDTO&amp;gt;&lt;br/&gt;+ servizioEntitytoDTO(Servizio): ServizioDTO&lt;br/&gt;+ servizioDTOtoEntity(ServizioDTO): Servizio&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2208" y="2635" width="390" height="145" as="geometry" />
    </mxCell>
    <mxCell id="node22" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MappaTurni&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MappaTurni(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ turnoEntityToDTO(List&amp;lt;Turno&amp;gt;): Set&amp;lt;TurnoDTO&amp;gt;&lt;br/&gt;+ turnoDTOToEntity(TurnoDTO): Turno&lt;br/&gt;+ turnoEntityToDTO(Turno): TurnoDTO&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6299" y="2512" width="355" height="145" as="geometry" />
    </mxCell>
    <mxCell id="node92" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;MappaUtenti&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MappaUtenti(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ utenteDTOtoEntity(Set&amp;lt;UtenteDTO&amp;gt;): Set&amp;lt;Utente&amp;gt;&lt;br/&gt;+ utentiEntitytoDTO(List&amp;lt;Utente&amp;gt;): Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;+ utenteEntitytoDTO(Utente): UtenteDTO&lt;br/&gt;+ utenteDTOtoEntity(UtenteDTO): Utente&lt;br/&gt;+ utentiEntitytoDTO(Set&amp;lt;Utente&amp;gt;): Set&amp;lt;UtenteDTO&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2213" y="2836" width="373" height="180" as="geometry" />
    </mxCell>
    <mxCell id="node29" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ModificaAssegnazioneTurnoDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ModificaAssegnazioneTurnoDTO(long, long[], long[], long): &lt;br/&gt;+ ModificaAssegnazioneTurnoDTO(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ utenteModificatoreId: long&lt;br/&gt;~ idAssegnazione: long&lt;br/&gt;~ utenti_guardia: long[]&lt;br/&gt;~ utenti_reperibili: long[]&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getUtenti_guardia(): long[]&lt;br/&gt;+ getIdAssegnazione(): long&lt;br/&gt;+ getUtenti_reperibili(): long[]&lt;br/&gt;+ getUtenteModificatoreId(): long&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ setIdAssegnazione(long): void&lt;br/&gt;+ setUtenti_guardia(long[]): void&lt;br/&gt;+ setUtenti_reperibili(long[]): void&lt;br/&gt;+ setUtenteModificatoreId(long): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6375" y="1017" width="419" height="459" as="geometry" />
    </mxCell>
    <mxCell id="node9" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Ms3Application&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Ms3Application(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ main(String[]): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3406" y="2767" width="172" height="95" as="geometry" />
    </mxCell>
    <mxCell id="node78" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;NotEnoughFeasibleUsersException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ NotEnoughFeasibleUsersException(int, int): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5085" y="518" width="325" height="67" as="geometry" />
    </mxCell>
    <mxCell id="node57" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;PasswordDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ PasswordDTO(Long, String, String): &lt;br/&gt;+ PasswordDTO(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- id: Long&lt;br/&gt;- oldPassword: String&lt;br/&gt;- newPassword: String&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getId(): Long&lt;br/&gt;+ getOldPassword(): String&lt;br/&gt;+ getNewPassword(): String&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setOldPassword(String): void&lt;br/&gt;+ setNewPassword(String): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4135" y="2550" width="271" height="390" as="geometry" />
    </mxCell>
    <mxCell id="node126" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RegistraAssegnazioneTurnoDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RegistraAssegnazioneTurnoDTO(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- utentiReperibili: Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;- anno: int&lt;br/&gt;- utentiDiGuardia: Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;- servizio: ServizioDTO&lt;br/&gt;- tipologiaTurno: TipologiaTurno&lt;br/&gt;- forced: boolean&lt;br/&gt;- mese: int&lt;br/&gt;- mansione: MansioneEnum&lt;br/&gt;- giorno: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getUtentiDiGuardia(): Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;+ getGiorno(): int&lt;br/&gt;+ getMese(): int&lt;br/&gt;+ getAnno(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getTipologiaTurno(): TipologiaTurno&lt;br/&gt;+ getMansione(): MansioneEnum&lt;br/&gt;+ setAnno(int): void&lt;br/&gt;+ setUtentiReperibili(Set&amp;lt;UtenteDTO&amp;gt;): void&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ setTipologiaTurno(TipologiaTurno): void&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ setServizio(ServizioDTO): void&lt;br/&gt;+ getUtentiReperibili(): Set&amp;lt;UtenteDTO&amp;gt;&lt;br/&gt;+ setMansione(MansioneEnum): void&lt;br/&gt;+ setUtentiDiGuardia(Set&amp;lt;UtenteDTO&amp;gt;): void&lt;br/&gt;+ getServizio(): ServizioDTO&lt;br/&gt;+ isForced(): boolean&lt;br/&gt;+ setGiorno(int): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ setMese(int): void&lt;br/&gt;+ setForced(boolean): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8936" y="1298" width="317" height="781" as="geometry" />
    </mxCell>
    <mxCell id="node108" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RispostaViolazioneVincoli&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RispostaViolazioneVincoli(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ messagges: List&amp;lt;String&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getMessagges(): List&amp;lt;String&amp;gt;&lt;br/&gt;+ setMessagges(List&amp;lt;String&amp;gt;): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="868" y="2054" width="257" height="229" as="geometry" />
    </mxCell>
    <mxCell id="node102" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;RuoloEnum&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RuoloEnum(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ SPECIALIZZANDO: &lt;br/&gt;+ STRUTTURATO: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): RuoloEnum[]&lt;br/&gt;+ valueOf(String): RuoloEnum&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1902" y="2838" width="217" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node16" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;RuoloNumero&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ RuoloNumero(): &lt;br/&gt;+ RuoloNumero(Long, RuoloEnum, int): &lt;br/&gt;+ RuoloNumero(RuoloEnum, int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- id: Long&lt;br/&gt;- numero: int&lt;br/&gt;- ruolo: RuoloEnum&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getId(): Long&lt;br/&gt;+ getRuolo(): RuoloEnum&lt;br/&gt;+ getNumero(): int&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setRuolo(RuoloEnum): void&lt;br/&gt;+ setNumero(int): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8735" y="3025" width="280" height="413" as="geometry" />
    </mxCell>
    <mxCell id="node107" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;RuoloNumeroDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2246" y="2427" width="184" height="35" as="geometry" />
    </mxCell>
    <mxCell id="node93" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Schedule&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Schedule(LocalDate, LocalDate): &lt;br/&gt;+ Schedule(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- causeIllegal: Exception&lt;br/&gt;- startDateEpochDay: long&lt;br/&gt;- id: Long&lt;br/&gt;- isIllegal: boolean&lt;br/&gt;~ violatedConstraintLog: List&amp;lt;ViolatedConstraintLogEntry&amp;gt;&lt;br/&gt;- assegnazioniTurno: List&amp;lt;AssegnazioneTurno&amp;gt;&lt;br/&gt;- endDateEpochDay: long&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setId(Long): void&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ getStartDateEpochDay(): long&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setIllegal(boolean): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ getEndDateEpochDay(): long&lt;br/&gt;+ setAssegnazioniTurno(List&amp;lt;AssegnazioneTurno&amp;gt;): void&lt;br/&gt;+ getAssegnazioniTurno(): List&amp;lt;AssegnazioneTurno&amp;gt;&lt;br/&gt;+ getViolatedConstraintLog(): List&amp;lt;ViolatedConstraintLogEntry&amp;gt;&lt;br/&gt;+ isIllegal(): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ getCauseIllegal(): Exception&lt;br/&gt;+ setStartDateEpochDay(long): void&lt;br/&gt;+ setCauseIllegal(Exception): void&lt;br/&gt;+ setEndDateEpochDay(long): void&lt;br/&gt;+ setViolatedConstraintLog(List&amp;lt;ViolatedConstraintLogEntry&amp;gt;): void&lt;br/&gt;+ getEndDate(): LocalDate&lt;br/&gt;+ redeem(): void&lt;br/&gt;+ getStartDate(): LocalDate&lt;br/&gt;+ taint(Exception): void&lt;br/&gt;+ purify(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8214" y="3243" width="459" height="781" as="geometry" />
    </mxCell>
    <mxCell id="node58" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScheduleBuilder&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ScheduleBuilder(List&amp;lt;Vincolo&amp;gt;, List&amp;lt;Utente&amp;gt;, Schedule): &lt;br/&gt;+ ScheduleBuilder(LocalDate, LocalDate, List&amp;lt;Vincolo&amp;gt;, List&amp;lt;AssegnazioneTurno&amp;gt;, List&amp;lt;Utente&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- schedule: Schedule&lt;br/&gt;- controllerScocciatura: ControllerScocciatura&lt;br/&gt;- logger: Logger&lt;br/&gt;- allConstraints: List&amp;lt;Vincolo&amp;gt;&lt;br/&gt;- allUserScheduleStates: Map&amp;lt;Long, UserScheduleState&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getAllUserScheduleStates(): Map&amp;lt;Long, UserScheduleState&amp;gt;&lt;br/&gt;+ getLogger(): Logger&lt;br/&gt;+ getAllConstraints(): List&amp;lt;Vincolo&amp;gt;&lt;br/&gt;+ getSchedule(): Schedule&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getControllerScocciatura(): ControllerScocciatura&lt;br/&gt;+ setLogger(Logger): void&lt;br/&gt;+ setAllConstraints(List&amp;lt;Vincolo&amp;gt;): void&lt;br/&gt;+ setAllUserScheduleStates(Map&amp;lt;Long, UserScheduleState&amp;gt;): void&lt;br/&gt;+ setSchedule(Schedule): void&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ setControllerScocciatura(ControllerScocciatura): void&lt;br/&gt;+ addAssegnazioneTurno(AssegnazioneTurno, boolean): Schedule&lt;br/&gt;+ build(): Schedule&lt;br/&gt;- initializeUserScheduleStates(List&amp;lt;Utente&amp;gt;): void&lt;br/&gt;- aggiungiUtenti(AssegnazioneTurno, int, Set&amp;lt;Utente&amp;gt;): void&lt;br/&gt;- verificaTuttiVincoli(ContestoVincolo, boolean): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8895" y="2312" width="456" height="643" as="geometry" />
    </mxCell>
    <mxCell id="node5" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ScheduleDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findByDateBetween(long): Schedule&lt;br/&gt;+ leggiSchedulazioniIllegali(): List&amp;lt;Schedule&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1495" y="2750" width="314" height="106" as="geometry" />
    </mxCell>
    <mxCell id="node59" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScheduloDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ScheduloDTO(): &lt;br/&gt;+ ScheduloDTO(String, String, boolean, long): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- illegalita: boolean&lt;br/&gt;- dataInizio: String&lt;br/&gt;- dataFine: String&lt;br/&gt;- id: long&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setDataInizio(String): void&lt;br/&gt;+ getDataInizio(): String&lt;br/&gt;+ getDataFine(): String&lt;br/&gt;+ getId(): long&lt;br/&gt;+ isIllegalita(): boolean&lt;br/&gt;+ setDataFine(String): void&lt;br/&gt;+ setId(long): void&lt;br/&gt;+ setIllegalita(boolean): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ toString(): String&lt;br/&gt;+ hashCode(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7275" y="2325" width="322" height="459" as="geometry" />
    </mxCell>
    <mxCell id="node21" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScheduloRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ScheduloRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- controllerScheduler: IControllerScheduler&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ creaSchedulo(GenerazioneScheduloDTO): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ ricreaSchedulo(Long): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiSchedulazioniIllegali(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiSchedulazioni(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ deleteSchedulo(Long): ResponseEntity&amp;lt;?&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3639" y="2508" width="435" height="206" as="geometry" />
    </mxCell>
    <mxCell id="node20" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Scocciatura&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Scocciatura(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- id: Long&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ calcolaUffa(ContestoScocciatura): int&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2359" y="841" width="277" height="252" as="geometry" />
    </mxCell>
    <mxCell id="node116" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScocciaturaAssegnazioneUtente&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ScocciaturaAssegnazioneUtente(int, DayOfWeek, TipologiaTurno): &lt;br/&gt;+ ScocciaturaAssegnazioneUtente(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- peso: int&lt;br/&gt;- giornoSettimana: DayOfWeek&lt;br/&gt;- tipologiaTurno: TipologiaTurno&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getPeso(): int&lt;br/&gt;+ getGiornoSettimana(): DayOfWeek&lt;br/&gt;+ getTipologiaTurno(): TipologiaTurno&lt;br/&gt;+ setPeso(int): void&lt;br/&gt;+ setGiornoSettimana(DayOfWeek): void&lt;br/&gt;+ setTipologiaTurno(TipologiaTurno): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ calcolaUffa(ContestoScocciatura): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="-158" y="1201" width="456" height="413" as="geometry" />
    </mxCell>
    <mxCell id="node13" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ScocciaturaDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2555" y="2471" width="171" height="35" as="geometry" />
    </mxCell>
    <mxCell id="node83" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScocciaturaDesiderata&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ScocciaturaDesiderata(): &lt;br/&gt;+ ScocciaturaDesiderata(int): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- peso: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getPeso(): int&lt;br/&gt;+ setPeso(int): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ calcolaUffa(ContestoScocciatura): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2791" y="826" width="277" height="275" as="geometry" />
    </mxCell>
    <mxCell id="node67" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ScocciaturaVacanza&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ScocciaturaVacanza(): &lt;br/&gt;+ ScocciaturaVacanza(int, Holiday, TipologiaTurno): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- peso: int&lt;br/&gt;- vacanza: Holiday&lt;br/&gt;- tipologiaTurno: TipologiaTurno&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getPeso(): int&lt;br/&gt;+ getVacanza(): Holiday&lt;br/&gt;+ getTipologiaTurno(): TipologiaTurno&lt;br/&gt;+ setPeso(int): void&lt;br/&gt;+ setVacanza(Holiday): void&lt;br/&gt;+ setTipologiaTurno(TipologiaTurno): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ calcolaUffa(ContestoScocciatura): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1794" y="842" width="357" height="413" as="geometry" />
    </mxCell>
    <mxCell id="node123" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Servizio&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Servizio(String): &lt;br/&gt;# Servizio(): &lt;br/&gt;+ Servizio(String, List&amp;lt;MansioneEnum&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- nome: String&lt;br/&gt;~ mansioni: List&amp;lt;MansioneEnum&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getNome(): String&lt;br/&gt;+ getMansioni(): List&amp;lt;MansioneEnum&amp;gt;&lt;br/&gt;+ setNome(String): void&lt;br/&gt;+ setMansioni(List&amp;lt;MansioneEnum&amp;gt;): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2355" y="3077" width="300" height="344" as="geometry" />
    </mxCell>
    <mxCell id="node84" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ServizioDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ServizioDTO(String, List&amp;lt;MansioneEnum&amp;gt;): &lt;br/&gt;+ ServizioDTO(): &lt;br/&gt;+ ServizioDTO(String): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- nome: String&lt;br/&gt;- mansioni: List&amp;lt;MansioneEnum&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getNome(): String&lt;br/&gt;+ getMansioni(): List&amp;lt;MansioneEnum&amp;gt;&lt;br/&gt;+ setNome(String): void&lt;br/&gt;+ setMansioni(List&amp;lt;MansioneEnum&amp;gt;): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2659" y="2572" width="319" height="344" as="geometry" />
    </mxCell>
    <mxCell id="node79" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;ServizioDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findByNome(String): Servizio&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3732" y="2795" width="224" height="78" as="geometry" />
    </mxCell>
    <mxCell id="node86" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ServizioRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ServizioRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ controllerServizi: IControllerServizi&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ creaServizio(ServizioDTO): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiServizi(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiServizio(String): ResponseEntity&amp;lt;?&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7929" y="2051" width="337" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node130" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;TipoCategoriaEnum&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TipoCategoriaEnum(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ STATO: &lt;br/&gt;+ SPECIALIZZAZIONE: &lt;br/&gt;+ TURNAZIONE: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ values(): TipoCategoriaEnum[]&lt;br/&gt;+ valueOf(String): TipoCategoriaEnum&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8560" y="2317" width="269" height="183" as="geometry" />
    </mxCell>
    <mxCell id="node12" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;TipologiaTurno&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TipologiaTurno(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ MATTUTINO: &lt;br/&gt;+ POMERIDIANO: &lt;br/&gt;+ NOTTURNO: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ valueOf(String): TipologiaTurno&lt;br/&gt;+ values(): TipologiaTurno[]&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8524" y="2622" width="240" height="183" as="geometry" />
    </mxCell>
    <mxCell id="node112" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Turno&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Turno(): &lt;br/&gt;+ Turno(LocalTime, LocalTime, Servizio, MansioneEnum, TipologiaTurno, List&amp;lt;RuoloNumero&amp;gt;, boolean): &lt;br/&gt;+ Turno(LocalTime, LocalTime, Servizio, MansioneEnum, TipologiaTurno, boolean): &lt;br/&gt;+ Turno(long, LocalTime, LocalTime, Servizio, MansioneEnum, TipologiaTurno, boolean): &lt;br/&gt;+ Turno(LocalTime, LocalTime, Servizio, MansioneEnum, TipologiaTurno, boolean, List&amp;lt;RuoloNumero&amp;gt;, boolean): &lt;br/&gt;+ Turno(Long, TipologiaTurno, LocalTime, LocalTime, GiorniDellaSettimanaBitMask, Servizio, MansioneEnum, boolean): &lt;br/&gt;+ Turno(LocalTime, LocalTime, Servizio, MansioneEnum, TipologiaTurno, List&amp;lt;RuoloNumero&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- oraInizio: LocalTime&lt;br/&gt;- id: Long&lt;br/&gt;- reperibilitaAttiva: boolean&lt;br/&gt;- tipologiaTurno: TipologiaTurno&lt;br/&gt;- giornoSuccessivo: boolean&lt;br/&gt;- mansione: MansioneEnum&lt;br/&gt;- categoryPolicies: List&amp;lt;UserCategoryPolicy&amp;gt;&lt;br/&gt;- servizio: Servizio&lt;br/&gt;- giorniDiValidità: GiorniDellaSettimanaBitMask&lt;br/&gt;- ruoliNumero: List&amp;lt;RuoloNumero&amp;gt;&lt;br/&gt;- oraFine: LocalTime&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getNumRequiredUsers(): int&lt;br/&gt;+ getOraFine(): LocalTime&lt;br/&gt;+ getTipologiaTurno(): TipologiaTurno&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setReperibilitaAttiva(boolean): void&lt;br/&gt;+ setOraFine(LocalTime): void&lt;br/&gt;+ getOraInizio(): LocalTime&lt;br/&gt;+ isGiornoSuccessivo(): boolean&lt;br/&gt;+ isReperibilitaAttiva(): boolean&lt;br/&gt;+ setMansione(MansioneEnum): void&lt;br/&gt;+ getCategoryPolicies(): List&amp;lt;UserCategoryPolicy&amp;gt;&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ setGiornoSuccessivo(boolean): void&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ setOraInizio(LocalTime): void&lt;br/&gt;+ getRuoliNumero(): List&amp;lt;RuoloNumero&amp;gt;&lt;br/&gt;+ setServizio(Servizio): void&lt;br/&gt;+ setGiorniDiValidità(GiorniDellaSettimanaBitMask): void&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ getMansione(): MansioneEnum&lt;br/&gt;+ setRuoliNumero(List&amp;lt;RuoloNumero&amp;gt;): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setTipologiaTurno(TipologiaTurno): void&lt;br/&gt;+ setCategoryPolicies(List&amp;lt;UserCategoryPolicy&amp;gt;): void&lt;br/&gt;+ getGiorniDiValidità(): GiorniDellaSettimanaBitMask&lt;br/&gt;+ getServizio(): Servizio&lt;br/&gt;+ setCategorieVietate(Set&amp;lt;Categoria&amp;gt;): void&lt;br/&gt;+ getMinutidiLavoro(): long&lt;br/&gt;+ getCategorieVietate(): Set&amp;lt;Categoria&amp;gt;&lt;br/&gt;+ setGiornoSuccessivo(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5979" y="3169" width="437" height="1172" as="geometry" />
    </mxCell>
    <mxCell id="node66" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TurnoDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TurnoDTO(long, TipologiaTurno, LocalTime, LocalTime, ServizioDTO, MansioneEnum, boolean, boolean, List&amp;lt;RuoloNumero&amp;gt;): &lt;br/&gt;+ TurnoDTO(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- tipologiaTurno: TipologiaTurno&lt;br/&gt;- categorieVietate: Set&amp;lt;Categoria&amp;gt;&lt;br/&gt;- giornoSuccessivo: boolean&lt;br/&gt;- mansione: MansioneEnum&lt;br/&gt;- oraInizio: LocalTime&lt;br/&gt;- ruoliNumero: List&amp;lt;RuoloNumero&amp;gt;&lt;br/&gt;- oraFine: LocalTime&lt;br/&gt;- servizio: ServizioDTO&lt;br/&gt;- id: long&lt;br/&gt;- reperibilitaAttiva: boolean&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ setOraInizio(LocalTime): void&lt;br/&gt;+ getMansione(): MansioneEnum&lt;br/&gt;+ isGiornoSuccessivo(): boolean&lt;br/&gt;+ getId(): long&lt;br/&gt;+ isReperibilitaAttiva(): boolean&lt;br/&gt;+ setId(long): void&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ setReperibilitaAttiva(boolean): void&lt;br/&gt;+ setMansione(MansioneEnum): void&lt;br/&gt;+ getRuoliNumero(): List&amp;lt;RuoloNumero&amp;gt;&lt;br/&gt;+ setTipologiaTurno(TipologiaTurno): void&lt;br/&gt;+ setOraFine(LocalTime): void&lt;br/&gt;+ setGiornoSuccessivo(boolean): void&lt;br/&gt;+ setCategorieVietate(Set&amp;lt;Categoria&amp;gt;): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ setRuoliNumero(List&amp;lt;RuoloNumero&amp;gt;): void&lt;br/&gt;+ setServizio(ServizioDTO): void&lt;br/&gt;+ getOraFine(): LocalTime&lt;br/&gt;+ getOraInizio(): LocalTime&lt;br/&gt;+ getTipologiaTurno(): TipologiaTurno&lt;br/&gt;+ getServizio(): ServizioDTO&lt;br/&gt;+ getCategorieVietate(): Set&amp;lt;Categoria&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5457" y="1683" width="431" height="873" as="geometry" />
    </mxCell>
    <mxCell id="node119" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;TurnoDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findAllByServizioNomeAndTipologiaTurno(String, TipologiaTurno): List&amp;lt;Turno&amp;gt;&lt;br/&gt;+ findAllByServizioNome(String): List&amp;lt;Turno&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6150" y="2775" width="518" height="106" as="geometry" />
    </mxCell>
    <mxCell id="node77" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TurnoException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TurnoException(String): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1987" y="2512" width="198" height="67" as="geometry" />
    </mxCell>
    <mxCell id="node48" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;TurnoRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ TurnoRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ controllerTurni: IControllerTurni&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ creaTurno(TurnoDTO): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiTurni(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiTurniServizio(String): ResponseEntity&amp;lt;?&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3246" y="2428" width="333" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node15" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UnableToBuildScheduleException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ UnableToBuildScheduleException(String): &lt;br/&gt;+ UnableToBuildScheduleException(String, NotEnoughFeasibleUsersException): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4754" y="372" width="456" height="92" as="geometry" />
    </mxCell>
    <mxCell id="node76" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UserCategoryPolicy&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ UserCategoryPolicy(Categoria, Turno, UserCategoryPolicyValue): &lt;br/&gt;+ UserCategoryPolicy(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- categoria: Categoria&lt;br/&gt;- turno: Turno&lt;br/&gt;- id: Long&lt;br/&gt;- policy: UserCategoryPolicyValue&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getTurno(): Turno&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ getCategoria(): Categoria&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getPolicy(): UserCategoryPolicyValue&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setCategoria(Categoria): void&lt;br/&gt;+ setTurno(Turno): void&lt;br/&gt;+ setPolicy(UserCategoryPolicyValue): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="7826" y="1458" width="449" height="459" as="geometry" />
    </mxCell>
    <mxCell id="node19" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;UserCategoryPolicyDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1067" y="2345" width="234" height="35" as="geometry" />
    </mxCell>
    <mxCell id="node55" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;enumeration&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;UserCategoryPolicyValue&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ UserCategoryPolicyValue(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ INCLUDE: &lt;br/&gt;+ EXCLUDE: &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ valueOf(String): UserCategoryPolicyValue&lt;br/&gt;+ values(): UserCategoryPolicyValue[]&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3158" y="1643" width="305" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node54" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UserScheduleState&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ UserScheduleState(Utente, Schedule): &lt;br/&gt;+ UserScheduleState(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- uffaParziale: int&lt;br/&gt;- uffaCumulativo: int&lt;br/&gt;~ assegnazioniTurnoCache: List&amp;lt;AssegnazioneTurno&amp;gt;&lt;br/&gt;- utente: Utente&lt;br/&gt;- id: Long&lt;br/&gt;- schedule: Schedule&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getSchedule(): Schedule&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ getUtente(): Utente&lt;br/&gt;+ getUffaParziale(): int&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ getUffaCumulativo(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ setAssegnazioniTurnoCache(List&amp;lt;AssegnazioneTurno&amp;gt;): void&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setUtente(Utente): void&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ setSchedule(Schedule): void&lt;br/&gt;+ setUffaParziale(int): void&lt;br/&gt;+ setUffaCumulativo(int): void&lt;br/&gt;+ addUffaTemp(int): void&lt;br/&gt;+ addAssegnazioneTurno(AssegnazioneTurno): void&lt;br/&gt;+ getAssegnazioniTurnoCache(): List&amp;lt;AssegnazioneTurno&amp;gt;&lt;br/&gt;+ saveUffaTemp(): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5491" y="956" width="432" height="666" as="geometry" />
    </mxCell>
    <mxCell id="node30" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Utente&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Utente(Long, String, String, String, LocalDate, String, String, RuoloEnum, AttoreEnum): &lt;br/&gt;+ Utente(Long, String, String, LocalDate, String, RuoloEnum, String, String, int, AttoreEnum): &lt;br/&gt;# Utente(): &lt;br/&gt;+ Utente(Long, String, String, LocalDate, String, RuoloEnum, String, String, int, List&amp;lt;CategoriaUtente&amp;gt;, AttoreEnum): &lt;br/&gt;+ Utente(Long, String, String, String, LocalDate, String, String, RuoloEnum, List&amp;lt;CategoriaUtente&amp;gt;, AttoreEnum): &lt;br/&gt;+ Utente(String, String, String, LocalDate, String, String, RuoloEnum, AttoreEnum): &lt;br/&gt;+ Utente(Long, String, String, String, LocalDate, String, RuoloEnum, List&amp;lt;CategoriaUtente&amp;gt;, String, List&amp;lt;Desiderata&amp;gt;, AttoreEnum): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- desiderataList: List&amp;lt;Desiderata&amp;gt;&lt;br/&gt;- cognome: String&lt;br/&gt;- turnazioni: List&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;- nome: String&lt;br/&gt;- specializzazioni: List&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;- dataNascita: LocalDate&lt;br/&gt;- id: Long&lt;br/&gt;- ruoloEnum: RuoloEnum&lt;br/&gt;- attore: AttoreEnum&lt;br/&gt;- password: String&lt;br/&gt;- maxWeekSchedulableHours: int&lt;br/&gt;- codiceFiscale: String&lt;br/&gt;- email: String&lt;br/&gt;- stato: List&amp;lt;CategoriaUtente&amp;gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getPassword(): String&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ getNome(): String&lt;br/&gt;+ setRuoloEnum(RuoloEnum): void&lt;br/&gt;+ setAttore(AttoreEnum): void&lt;br/&gt;+ setStato(List&amp;lt;CategoriaUtente&amp;gt;): void&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ getCognome(): String&lt;br/&gt;+ getTurnazioni(): List&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;+ setPassword(String): void&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ setDataNascita(LocalDate): void&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ setEmail(String): void&lt;br/&gt;+ getDataNascita(): LocalDate&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ setTurnazioni(List&amp;lt;CategoriaUtente&amp;gt;): void&lt;br/&gt;+ getCodiceFiscale(): String&lt;br/&gt;+ getRuoloEnum(): RuoloEnum&lt;br/&gt;+ getEmail(): String&lt;br/&gt;+ getMaxWeekSchedulableHours(): int&lt;br/&gt;+ setNome(String): void&lt;br/&gt;+ setDesiderataList(List&amp;lt;Desiderata&amp;gt;): void&lt;br/&gt;+ setCodiceFiscale(String): void&lt;br/&gt;+ getSpecializzazioni(): List&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;+ setSpecializzazioni(List&amp;lt;CategoriaUtente&amp;gt;): void&lt;br/&gt;+ setCognome(String): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getDesiderataList(): List&amp;lt;Desiderata&amp;gt;&lt;br/&gt;+ getStato(): List&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;+ getAttore(): AttoreEnum&lt;br/&gt;+ setMaxWeekSchedulableHours(int): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3877" y="3389" width="415" height="1264" as="geometry" />
    </mxCell>
    <mxCell id="node10" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UtenteDTO&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ UtenteDTO(Long, String, String, LocalDate, String, RuoloEnum, String, String, List&amp;lt;CategoriaUtente&amp;gt;, List&amp;lt;CategoriaUtente&amp;gt;, AttoreEnum): &lt;br/&gt;+ UtenteDTO(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- email: String&lt;br/&gt;- ruoloEnum: RuoloEnum&lt;br/&gt;- cognome: String&lt;br/&gt;- specializzazioni: List&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;- dataNascita: LocalDate&lt;br/&gt;- nome: String&lt;br/&gt;- codiceFiscale: String&lt;br/&gt;- password: String&lt;br/&gt;- categorie: List&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;- id: Long&lt;br/&gt;- attore: AttoreEnum&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getDataNascita(): LocalDate&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ getNome(): String&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ setNome(String): void&lt;br/&gt;+ getCognome(): String&lt;br/&gt;+ getCodiceFiscale(): String&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ setEmail(String): void&lt;br/&gt;+ setAttore(AttoreEnum): void&lt;br/&gt;+ getRuoloEnum(): RuoloEnum&lt;br/&gt;+ getEmail(): String&lt;br/&gt;+ getAttore(): AttoreEnum&lt;br/&gt;+ setPassword(String): void&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getPassword(): String&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ setRuoloEnum(RuoloEnum): void&lt;br/&gt;+ setSpecializzazioni(List&amp;lt;CategoriaUtente&amp;gt;): void&lt;br/&gt;+ getCategorie(): List&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;+ setCodiceFiscale(String): void&lt;br/&gt;+ setCategorie(List&amp;lt;CategoriaUtente&amp;gt;): void&lt;br/&gt;+ setCognome(String): void&lt;br/&gt;+ getSpecializzazioni(): List&amp;lt;CategoriaUtente&amp;gt;&lt;br/&gt;+ setDataNascita(LocalDate): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="9084" y="3018" width="411" height="942" as="geometry" />
    </mxCell>
    <mxCell id="node63" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;UtenteDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findByEmailAndPassword(String, String): Utente&lt;br/&gt;+ findById(long): Utente&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2985" y="2985" width="345" height="106" as="geometry" />
    </mxCell>
    <mxCell id="node35" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;UtentiRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ UtentiRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- controllerUtente: IControllerUtente&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ creaUtente(UtenteDTO): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiUtenti(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiUtente(Long): ResponseEntity&amp;lt;?&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1085" y="2649" width="327" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node85" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;Vincolo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ Vincolo(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- violabile: boolean&lt;br/&gt;- descrizione: String&lt;br/&gt;- id: Long&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ isViolabile(): boolean&lt;br/&gt;+ getDescrizione(): String&lt;br/&gt;+ setViolabile(boolean): void&lt;br/&gt;+ setDescrizione(String): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ getId(): Long&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ verificaVincolo(ContestoVincolo): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5358" y="-6" width="283" height="390" as="geometry" />
    </mxCell>
    <mxCell id="node128" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;VincoloAssegnazioneTurnoTurno&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ VincoloAssegnazioneTurnoTurno(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;# getAssegnazioneTurnoPrecedenteIdx(List&amp;lt;AssegnazioneTurno&amp;gt;, AssegnazioneTurno): int&lt;br/&gt;# verificaContiguitàAssegnazioneTurni(AssegnazioneTurno, AssegnazioneTurno): boolean&lt;br/&gt;# verificaContiguitàAssegnazioneTurni(AssegnazioneTurno, AssegnazioneTurno, TemporalUnit, long): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2952" y="322" width="493" height="145" as="geometry" />
    </mxCell>
    <mxCell id="node138" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;VincoloCategorieUtenteTurno&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ VincoloCategorieUtenteTurno(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- checkPolicy(UserCategoryPolicy, Utente, LocalDate): boolean&lt;br/&gt;+ verificaVincolo(ContestoVincolo): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="4470" y="-14" width="429" height="120" as="geometry" />
    </mxCell>
    <mxCell id="node144" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;VincoloDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ findByType(String): List&amp;lt;Vincolo&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="8418" y="2911" width="255" height="78" as="geometry" />
    </mxCell>
    <mxCell id="node91" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;VincoloMaxOrePeriodo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ VincoloMaxOrePeriodo(): &lt;br/&gt;+ VincoloMaxOrePeriodo(int, long): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- numMinutiMaxPeriodo: long&lt;br/&gt;- numGiorniPeriodo: int&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getNumGiorniPeriodo(): int&lt;br/&gt;+ getNumMinutiMaxPeriodo(): long&lt;br/&gt;+ setNumGiorniPeriodo(int): void&lt;br/&gt;+ setNumMinutiMaxPeriodo(long): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ verificaVincolo(ContestoVincolo): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1450" y="949" width="283" height="344" as="geometry" />
    </mxCell>
    <mxCell id="node28" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;VincoloMaxPeriodoConsecutivo&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ VincoloMaxPeriodoConsecutivo(int): &lt;br/&gt;+ VincoloMaxPeriodoConsecutivo(): &lt;br/&gt;+ VincoloMaxPeriodoConsecutivo(int, Categoria): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- maxConsecutiveMinutes: long&lt;br/&gt;- categoriaVincolata: Categoria&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getMaxConsecutiveMinutes(): long&lt;br/&gt;+ getCategoriaVincolata(): Categoria&lt;br/&gt;+ setMaxConsecutiveMinutes(long): void&lt;br/&gt;+ setCategoriaVincolata(Categoria): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;br/&gt;+ verificaVincolo(ContestoVincolo): void&lt;br/&gt;- verificaAppartenenzaCategoria(ContestoVincolo): boolean&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3636" y="60" width="409" height="390" as="geometry" />
    </mxCell>
    <mxCell id="node134" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;VincoloNumeroDiRuoloTurno&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ VincoloNumeroDiRuoloTurno(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ verificaVincolo(ContestoVincolo): void&lt;br/&gt;- verifica(ContestoVincolo, Set&amp;lt;Utente&amp;gt;): void&lt;br/&gt;- contaRuoli(ContestoVincolo, Set&amp;lt;Utente&amp;gt;): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6263" y="356" width="348" height="145" as="geometry" />
    </mxCell>
    <mxCell id="node62" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;VincoloRestEndpoint&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ VincoloRestEndpoint(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;~ controllerVincolo: IControllerVincolo&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ leggiConfigurazioneVincoli(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ leggiVincoli(): ResponseEntity&amp;lt;?&amp;gt;&lt;br/&gt;+ aggiornaConfigurazioneVincoli(ConfigVincoli): ResponseEntity&amp;lt;?&amp;gt;&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="567" y="2433" width="457" height="160" as="geometry" />
    </mxCell>
    <mxCell id="node47" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;VincoloTipologieTurniContigue&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ VincoloTipologieTurniContigue(): &lt;br/&gt;+ VincoloTipologieTurniContigue(int, ChronoUnit, TipologiaTurno, HashSet&amp;lt;TipologiaTurno&amp;gt;): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- horizon: int&lt;br/&gt;- tUnit: ChronoUnit&lt;br/&gt;- tipologieTurnoVietate: Set&amp;lt;TipologiaTurno&amp;gt;&lt;br/&gt;- tipologiaTurno: TipologiaTurno&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getHorizon(): int&lt;br/&gt;+ getTUnit(): ChronoUnit&lt;br/&gt;+ getTipologiaTurno(): TipologiaTurno&lt;br/&gt;+ getTipologieTurnoVietate(): Set&amp;lt;TipologiaTurno&amp;gt;&lt;br/&gt;+ setHorizon(int): void&lt;br/&gt;+ setTUnit(ChronoUnit): void&lt;br/&gt;+ setTipologiaTurno(TipologiaTurno): void&lt;br/&gt;+ setTipologieTurnoVietate(Set&amp;lt;TipologiaTurno&amp;gt;): void&lt;br/&gt;+ verificaVincolo(ContestoVincolo): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2149" y="382" width="430" height="390" as="geometry" />
    </mxCell>
    <mxCell id="node70" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;i&gt;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt;&lt;/i&gt;&lt;br/&gt;&lt;b&gt;VincoloTipologieTurniContigueDao&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="424" y="2021" width="319" height="35" as="geometry" />
    </mxCell>
    <mxCell id="node45" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;VincoloUbiquità&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ VincoloUbiquità(): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ verificaVincolo(ContestoVincolo): void&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="5919" y="297" width="283" height="95" as="geometry" />
    </mxCell>
    <mxCell id="node7" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ViolatedConstraintException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ViolatedConstraintException(): &lt;br/&gt;+ ViolatedConstraintException(Exception): &lt;br/&gt;+ ViolatedConstraintException(String): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="2709" y="638" width="302" height="117" as="geometry" />
    </mxCell>
    <mxCell id="node60" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ViolatedConstraintLogEntry&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ViolatedConstraintLogEntry(): &lt;br/&gt;+ ViolatedConstraintLogEntry(ViolatedConstraintException): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- id: Long&lt;br/&gt;- violation: ViolatedConstraintException&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ getId(): Long&lt;br/&gt;+ getViolation(): ViolatedConstraintException&lt;br/&gt;+ setId(Long): void&lt;br/&gt;+ equals(Object): boolean&lt;br/&gt;# canEqual(Object): boolean&lt;br/&gt;+ hashCode(): int&lt;br/&gt;+ toString(): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="1920" y="1889" width="412" height="298" as="geometry" />
    </mxCell>
    <mxCell id="node136" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ViolatedVincoloAssegnazioneTurnoTurnoException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ViolatedVincoloAssegnazioneTurnoTurnoException(AssegnazioneTurno, AssegnazioneTurno, Utente): &lt;br/&gt;+ ViolatedVincoloAssegnazioneTurnoTurnoException(AssegnazioneTurno, Utente, int, long): &lt;br/&gt;+ ViolatedVincoloAssegnazioneTurnoTurnoException(AssegnazioneTurno, Utente, long): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="3136" y="594" width="453" height="117" as="geometry" />
    </mxCell>
    <mxCell id="node139" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ViolatedVincoloCategorieUtenteTurnoException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ViolatedVincoloCategorieUtenteTurnoException(AssegnazioneTurno, List&amp;lt;UserCategoryPolicy&amp;gt;, Utente): &lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;- printBrokenPolicies(List&amp;lt;UserCategoryPolicy&amp;gt;): String&lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="933" y="1242" width="441" height="95" as="geometry" />
    </mxCell>
    <mxCell id="node23" parent="1" vertex="1" value="&lt;p style=&quot;margin:0px;margin-top:4px;text-align:center;&quot;&gt;&lt;b&gt;ViolatedVincoloRuoloNumeroException&lt;/b&gt;&lt;/p&gt;&lt;hr size=&quot;1&quot;/&gt;&lt;p style=&quot;margin:0 0 0 4px;line-height:1.6;&quot;&gt;+ ViolatedVincoloRuoloNumeroException(AssegnazioneTurno, RuoloNumero, int): &lt;br/&gt;+ ViolatedVincoloRuoloNumeroException(AssegnazioneTurno, Utente): &lt;/p&gt;" style="verticalAlign=top;align=left;overflow=fill;fontSize=14;fontFamily=Helvetica;html=1;rounded=0;shadow=0;comic=0;labelBackgroundColor=none;strokeWidth=1;">
      <mxGeometry x="6083" y="580" width="467" height="92" as="geometry" />
    </mxCell>
    <mxCell id="edge17" edge="1" value="" parent="1" source="node113" target="node64" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.543;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge27" edge="1" value="" parent="1" source="node120" target="node18" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.014;exitY=0.000;exitDx=0;exitDy=0;entryX=0.909;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge16" edge="1" value="" parent="1" source="node2" target="node98" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.500;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="8078" y="1303" />
          <mxPoint x="8078" y="519" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge8" edge="1" value="" parent="1" source="node4" target="node117" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.025;exitDx=0;exitDy=0;entryX=1.000;entryY=0.864;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge5" edge="1" value="" parent="1" source="node74" target="node44" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.524;exitDx=0;exitDy=0;entryX=0.241;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3760" y="946" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge23" edge="1" value="" parent="1" source="node3" target="node111" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.440;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge7" edge="1" value="" parent="1" source="node101" target="node43" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.500;entryY=0.001;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="4492" y="820" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge0" edge="1" value="" parent="1" source="node72" target="node99" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.428;exitDx=0;exitDy=0;entryX=0.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge21" edge="1" value="" parent="1" source="node51" target="node56" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=1.000;exitY=0.857;exitDx=0;exitDy=0;entryX=0.000;entryY=0.567;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge10" edge="1" value="" parent="1" source="node125" target="node1" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.330;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge13" edge="1" value="" parent="1" source="node97" target="node50" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.000;exitY=0.398;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge4" edge="1" value="" parent="1" source="node133" target="node32" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.467;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge18" edge="1" value="" parent="1" source="node65" target="node103" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="64" y="1725" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge12" edge="1" value="" parent="1" source="node42" target="node129" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=1;startArrow=none;endArrow=block;endSize=12;strokeColor=#008200;exitX=0.828;exitY=0.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge11" edge="1" value="" parent="1" source="node78" target="node15" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.361;exitY=0.000;exitDx=0;exitDy=0;entryX=0.984;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points" />
      </mxGeometry>
    </mxCell>
    <mxCell id="edge14" edge="1" value="" parent="1" source="node116" target="node20" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=1.000;exitY=0.642;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1076" y="1465" />
          <mxPoint x="1076" y="1363" />
          <mxPoint x="2181" y="1363" />
          <mxPoint x="2181" y="1133" />
          <mxPoint x="2497" y="1133" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge19" edge="1" value="" parent="1" source="node83" target="node20" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="2930" y="1133" />
          <mxPoint x="2497" y="1133" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge26" edge="1" value="" parent="1" source="node67" target="node20" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=1.000;exitY=0.500;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="2341" y="1049" />
          <mxPoint x="2341" y="1133" />
          <mxPoint x="2497" y="1133" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge3" edge="1" value="" parent="1" source="node128" target="node85" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3199" y="473" />
          <mxPoint x="4101" y="473" />
          <mxPoint x="4101" y="132" />
          <mxPoint x="5336" y="132" />
          <mxPoint x="5336" y="416" />
          <mxPoint x="5500" y="416" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge25" edge="1" value="" parent="1" source="node138" target="node85" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="4684" y="132" />
          <mxPoint x="5336" y="132" />
          <mxPoint x="5336" y="416" />
          <mxPoint x="5500" y="416" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge22" edge="1" value="" parent="1" source="node91" target="node128" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.336;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1592" y="799" />
          <mxPoint x="3118" y="799" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge9" edge="1" value="" parent="1" source="node28" target="node128" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.336;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3840" y="38" />
          <mxPoint x="2620" y="38" />
          <mxPoint x="2620" y="799" />
          <mxPoint x="3118" y="799" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge2" edge="1" value="" parent="1" source="node134" target="node85" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.000;exitY=0.159;exitDx=0;exitDy=0;entryX=0.500;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="6220" y="378" />
          <mxPoint x="6220" y="416" />
          <mxPoint x="5500" y="416" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge15" edge="1" value="" parent="1" source="node47" target="node128" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=0.336;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="2364" y="799" />
          <mxPoint x="3118" y="799" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge1" edge="1" value="" parent="1" source="node45" target="node128" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=0.336;entryY=1.000;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="6061" y="-31" />
          <mxPoint x="2937" y="-31" />
          <mxPoint x="2937" y="38" />
          <mxPoint x="2620" y="38" />
          <mxPoint x="2620" y="799" />
          <mxPoint x="3118" y="799" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge20" edge="1" value="" parent="1" source="node136" target="node7" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=1.000;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="3362" y="733" />
          <mxPoint x="3103" y="733" />
          <mxPoint x="3103" y="692" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge24" edge="1" value="" parent="1" source="node139" target="node7" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.500;exitY=0.000;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="1154" y="304" />
          <mxPoint x="3618" y="304" />
          <mxPoint x="3618" y="733" />
          <mxPoint x="3103" y="733" />
          <mxPoint x="3103" y="692" />
        </Array>
      </mxGeometry>
    </mxCell>
    <mxCell id="edge6" edge="1" value="" parent="1" source="node23" target="node7" style="html=1;rounded=1;edgeStyle=orthogonalEdgeStyle;dashed=0;startArrow=none;endArrow=block;endSize=12;strokeColor=#000082;exitX=0.523;exitY=1.000;exitDx=0;exitDy=0;entryX=1.000;entryY=0.500;entryDx=0;entryDy=0;">
      <mxGeometry width="50" height="50" relative="1" as="geometry">
        <Array as="points">
          <mxPoint x="6328" y="1639" />
          <mxPoint x="4658" y="1639" />
          <mxPoint x="4658" y="733" />
          <mxPoint x="3103" y="733" />
          <mxPoint x="3103" y="692" />
        </Array>
      </mxGeometry>
    </mxCell>
  </root>
</mxGraphModel>